version: 2.0

jobs:
  build:
    machine:
      image: circleci/classic:latest
    working_directory: ~/
    steps:
      - run:
          name: Initialization environment
          command: |
            git clone https://github.com/betagouv/pass-culture-main.git
            cd pass-culture-main
            rm -rf shared
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/betagouv/pass-culture-api.git api || git clone https://github.com/betagouv/pass-culture-api.git api
            ./install_lib_ci.sh
      - checkout:
          path: ~/pass-culture-main/pro
      - run:
          name: Running Unit Tests
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use v8.15.1
            cd ~/pass-culture-main/pro
            yarn install
            yarn test:unit --coverage
            yarn coveralls
      - store_artifacts:
          path: ~/pass-culture-main/pro/coverage
      - run:
          name: Install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Run API server
          command: |
            cd ~/pass-culture-main
            docker-compose up
          background: true
      - run:
          name: Running Frontend
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use v8.15.1
            cd ~/pass-culture-main/pro
            yarn install
            yarn start
          background: true
      - run:
          name: Running industrial sandbox
          command: |
            cd pass-culture-main
            dockerize -wait http://localhost/health -timeout 5m -wait-retry-interval 5s
            ./pc sandbox --name=industrial
      - run:
          name: Running end2end tests
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use v8.15.1
            cd ~/pass-culture-main/pro
            dockerize -wait http://localhost/health -timeout 5m -wait-retry-interval 5s
            yarn test:cafe
      - store_artifacts:
         path: ~/pass-culture-main/pro/testcafe_screenshots

  deploy-pro:
    machine:
      image: circleci/classic:latest
    working_directory: ~/pass-culture-main/pro
    steps:
      - checkout:
          path: ~/pass-culture-main/pro
      - run: pwd
      - run: ./scripts/install_lib_ci_pro.sh
      - run:
          name: Install netlify CLI
          command: npm install -g netlify-cli@1.2.3
      - run:
          name: Install libraries
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use "$NODE_VERSION"
            yarn install
            set -a; source config/run_envs/"${CIRCLE_BRANCH}" && yarn build
      - run:
          name: Deploy Pro
          command: |
            netlify deploy -e "${CIRCLE_BRANCH}" -t ${NETLIFY_TOKEN}
      - run:
          name: Check deployed version
          command: |
            export COMPONENT_URL="https://pro.$(./scripts/compute_component_partial_url.sh ${CIRCLE_BRANCH})"
            ./scripts/check_current_tag_is_deployed.sh "$COMPONENT_URL"

workflows:
  version: 2
  commit:
    jobs:
      - build
      - deploy-pro:
          filters:
            branches:
              only:
                - master
