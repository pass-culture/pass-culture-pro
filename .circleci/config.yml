version: 2.0

jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/
    steps:
      - run:
          name: Initialization environment
          command: |
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/betagouv/pass-culture-main.git pass-culture-main || git clone https://github.com/betagouv/pass-culture-main.git pass-culture-main
            cd pass-culture-main
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/betagouv/pass-culture-api.git api || git clone https://github.com/betagouv/pass-culture-api.git api
            ./install_lib_ci.sh
      - checkout:
          path: ~/pass-culture-main/pro
      - run:
          name: Running Unit Tests
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd ~/pass-culture-main/pro
            nvm install
            yarn install
            yarn test:unit --coverage
            yarn coveralls
      - run:
          name: Install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Running API server
          command: |
           cd ~/pass-culture-main
           ./pc start-backend
          background: true
      - run:
          name: Running Frontend
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd ~/pass-culture-main/pro
            nvm install
            yarn start
          background: true
      - run:
          name: Running industrial sandbox
          command: |
            cd pass-culture-main
            dockerize -wait http://localhost/health/api -timeout 5m -wait-retry-interval 5s
            dockerize -wait http://localhost/health/database -timeout 5m -wait-retry-interval 5s
            ./pc sandbox --name=industrial
      - run:
          name: Running end2end tests
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd ~/pass-culture-main/pro
            nvm install
            yarn test:cafe
      - store_artifacts:
         path: ~/pass-culture-main/pro/testcafe_screenshots

  deploy-pro:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/
    steps:
      - run:
          name: Checkout main
          command: |
            git clone --single-branch --branch $CIRCLE_BRANCH https://github.com/betagouv/pass-culture-main.git pass-culture-main || git clone https://github.com/betagouv/pass-culture-main.git pass-culture-main
      - checkout:
          path: ~/pass-culture-main/pro
      - run:
          name: Install Lib CI
          command: |
            cd ~/pass-culture-main/pro
            ./scripts/install_lib_ci_pro.sh
      - run:
          name: Build and Deploy
          command: |
            cd ~/pass-culture-main/pro
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"
            nvm install
            yarn install

            set -a; source ~/pass-culture-main/config/run_envs/testing

            yarn build:testing
            npm install -g netlify-cli@2.46.0
            netlify deploy -s "${NETLIFY_SITE_ID_PRO}" -a "${NETLIFY_TOKEN}" -d build/ --prod

workflows:
  version: 2
  commit:
    jobs:
      - build
      - deploy-pro:
          filters:
            branches:
              only:
                - master
          requires:
            - build
