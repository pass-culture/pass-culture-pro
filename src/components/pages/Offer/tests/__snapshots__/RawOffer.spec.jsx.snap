// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offer | RawOffer  snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RawOffer
    currentUser={
        Object {
            "isAdmin": false,
          }
    }
    dispatch={[Function]}
    location={
        Object {
            "search": "?lieu=AQ",
          }
    }
    match={
        Object {
            "params": Object {
              "offerId": "N9",
            },
          }
    }
    query={
        Object {
            "context": [Function],
            "parse": [Function],
            "translate": [Function],
          }
    }
    venues={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "backTo": Object {
        "label": "Vos offres",
        "path": "/offres",
      },
      "children": <HeroSection
        subtitle={undefined}
        title="Détails de l'offre"
>
        <p
                className="subtitle"
        >
                Renseignez les détails de cette offre, puis mettez-la en avant en ajoutant une ou plusieurs accroches.
        </p>
        <p
                className="subtitle"
        >
                Attention : les offres payantes ne seront visibles auprès du public qu’à partir du début de l’expérimentation.
        </p>
        <withRouter(Connect(_Form))
                BlockComponent={null}
                Tag={null}
                action="/offers/undefined"
                className={null}
                errorsPatch={Object {}}
                failNotification="Formulaire non validé"
                formPatch={Object {}}
                formatPatch={[Function]}
                handleFail={null}
                handleFailNotification={null}
                handleFailRedirect={null}
                handleSuccess={[Function]}
                handleSuccessNotification={null}
                handleSuccessRedirect={null}
                method={undefined}
                name="offer"
                normalizer={null}
                onEnterKey={null}
                onEscapeKey={null}
                onSubmit={null}
                patch={undefined}
                readOnly={undefined}
                successNotification="Formulaire non validé"
        >
                <div
                        className="field-group"
                >
                        <Field
                                displayValue={[Function]}
                                errors={null}
                                isExpanded={true}
                                label="Titre de l'offre"
                                layout="horizontal"
                                name="name"
                                required={true}
                                size="normal"
                                storeValue={[Function]}
                        />
                        <Field
                                displayValue={[Function]}
                                errors={null}
                                label="Type"
                                layout="horizontal"
                                name="type"
                                optionLabel="label"
                                optionValue="value"
                                options={undefined}
                                placeholder="Sélectionnez un type d'offre"
                                readOnly={undefined}
                                required={true}
                                size="normal"
                                storeValue={[Function]}
                                sublabel="Le type d'offre ne peut pas être modifié une fois l'offre enregistrée."
                                type="select"
                        />
                </div>
                <div>
                        <h2
                                className="main-list-title"
                        >
                                Infos pratiques
                        </h2>
                        <div
                                className="field-group"
                        >
                                <Field
                                        debug={true}
                                        displayValue={[Function]}
                                        errors={null}
                                        label="Structure"
                                        layout="horizontal"
                                        name="offererId"
                                        options={undefined}
                                        placeholder="Sélectionnez une structure"
                                        readOnly={false}
                                        required={true}
                                        size="normal"
                                        storeValue={[Function]}
                                        type="select"
                                />
                                <Field
                                        displayValue={[Function]}
                                        errors={null}
                                        label="Lieu"
                                        layout="horizontal"
                                        name="venueId"
                                        options={Array []}
                                        placeholder="Sélectionnez un lieu"
                                        readOnly={false}
                                        required={true}
                                        size="normal"
                                        storeValue={[Function]}
                                        type="select"
                                />
                                <Field
                                        displayValue={[Function]}
                                        errors={null}
                                        label="Email auquel envoyer les réservations"
                                        layout="horizontal"
                                        name="bookingEmail"
                                        size="normal"
                                        storeValue={[Function]}
                                        sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                                        type="email"
                                />
                        </div>
                        <h2
                                className="main-list-title"
                        >
                                Infos artistiques
                        </h2>
                        <div
                                className="field-group"
                        >
                                <Field
                                        displayMaxLength={true}
                                        displayValue={[Function]}
                                        errors={null}
                                        isExpanded={true}
                                        label="Description"
                                        layout="horizontal"
                                        maxLength={1000}
                                        name="description"
                                        rows={5}
                                        size="normal"
                                        storeValue={[Function]}
                                        type="textarea"
                                />
                        </div>
                </div>
                <hr />
                <div
                        className="field is-grouped is-grouped-centered"
                        style={
                                Object {
                                        "justifyContent": "space-between",
                                      }
                        }
                >
                        <div
                                className="control"
                        >
                                <button
                                        className="button is-secondary is-medium"
                                        id="cancel-button"
                                        onClick={[Function]}
                                >
                                        Annuler
                                </button>
                        </div>
                        <div
                                className="control"
                        >
                                <SubmitButton
                                        className="button is-primary is-medium"
                                        getDisabled={[Function]}
                                        getTitle={[Function]}
                                        requiredFields={Array []}
                                        type="submit"
                                >
                                        Enregistrer
                                         
                                </SubmitButton>
                        </div>
                </div>
        </withRouter(Connect(_Form))>
</HeroSection>,
      "handleDataRequest": [Function],
      "name": "offer",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <p
            className="subtitle"
>
            Renseignez les détails de cette offre, puis mettez-la en avant en ajoutant une ou plusieurs accroches.
</p>,
          <p
            className="subtitle"
>
            Attention : les offres payantes ne seront visibles auprès du public qu’à partir du début de l’expérimentation.
</p>,
          <withRouter(Connect(_Form))
            BlockComponent={null}
            Tag={null}
            action="/offers/undefined"
            className={null}
            errorsPatch={Object {}}
            failNotification="Formulaire non validé"
            formPatch={Object {}}
            formatPatch={[Function]}
            handleFail={null}
            handleFailNotification={null}
            handleFailRedirect={null}
            handleSuccess={[Function]}
            handleSuccessNotification={null}
            handleSuccessRedirect={null}
            method={undefined}
            name="offer"
            normalizer={null}
            onEnterKey={null}
            onEscapeKey={null}
            onSubmit={null}
            patch={undefined}
            readOnly={undefined}
            successNotification="Formulaire non validé"
>
            <div
                        className="field-group"
            >
                        <Field
                                    displayValue={[Function]}
                                    errors={null}
                                    isExpanded={true}
                                    label="Titre de l'offre"
                                    layout="horizontal"
                                    name="name"
                                    required={true}
                                    size="normal"
                                    storeValue={[Function]}
                        />
                        <Field
                                    displayValue={[Function]}
                                    errors={null}
                                    label="Type"
                                    layout="horizontal"
                                    name="type"
                                    optionLabel="label"
                                    optionValue="value"
                                    options={undefined}
                                    placeholder="Sélectionnez un type d'offre"
                                    readOnly={undefined}
                                    required={true}
                                    size="normal"
                                    storeValue={[Function]}
                                    sublabel="Le type d'offre ne peut pas être modifié une fois l'offre enregistrée."
                                    type="select"
                        />
            </div>
            <div>
                        <h2
                                    className="main-list-title"
                        >
                                    Infos pratiques
                        </h2>
                        <div
                                    className="field-group"
                        >
                                    <Field
                                                debug={true}
                                                displayValue={[Function]}
                                                errors={null}
                                                label="Structure"
                                                layout="horizontal"
                                                name="offererId"
                                                options={undefined}
                                                placeholder="Sélectionnez une structure"
                                                readOnly={false}
                                                required={true}
                                                size="normal"
                                                storeValue={[Function]}
                                                type="select"
                                    />
                                    <Field
                                                displayValue={[Function]}
                                                errors={null}
                                                label="Lieu"
                                                layout="horizontal"
                                                name="venueId"
                                                options={Array []}
                                                placeholder="Sélectionnez un lieu"
                                                readOnly={false}
                                                required={true}
                                                size="normal"
                                                storeValue={[Function]}
                                                type="select"
                                    />
                                    <Field
                                                displayValue={[Function]}
                                                errors={null}
                                                label="Email auquel envoyer les réservations"
                                                layout="horizontal"
                                                name="bookingEmail"
                                                size="normal"
                                                storeValue={[Function]}
                                                sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                                                type="email"
                                    />
                        </div>
                        <h2
                                    className="main-list-title"
                        >
                                    Infos artistiques
                        </h2>
                        <div
                                    className="field-group"
                        >
                                    <Field
                                                displayMaxLength={true}
                                                displayValue={[Function]}
                                                errors={null}
                                                isExpanded={true}
                                                label="Description"
                                                layout="horizontal"
                                                maxLength={1000}
                                                name="description"
                                                rows={5}
                                                size="normal"
                                                storeValue={[Function]}
                                                type="textarea"
                                    />
                        </div>
            </div>
            <hr />
            <div
                        className="field is-grouped is-grouped-centered"
                        style={
                                    Object {
                                                "justifyContent": "space-between",
                                              }
                        }
            >
                        <div
                                    className="control"
                        >
                                    <button
                                                className="button is-secondary is-medium"
                                                id="cancel-button"
                                                onClick={[Function]}
                                    >
                                                Annuler
                                    </button>
                        </div>
                        <div
                                    className="control"
                        >
                                    <SubmitButton
                                                className="button is-primary is-medium"
                                                getDisabled={[Function]}
                                                getTitle={[Function]}
                                                requiredFields={Array []}
                                                type="submit"
                                    >
                                                Enregistrer
                                                 
                                    </SubmitButton>
                        </div>
            </div>
</withRouter(Connect(_Form))>,
        ],
        "subtitle": undefined,
        "title": "Détails de l'offre",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Renseignez les détails de cette offre, puis mettez-la en avant en ajoutant une ou plusieurs accroches.",
            "className": "subtitle",
          },
          "ref": null,
          "rendered": "Renseignez les détails de cette offre, puis mettez-la en avant en ajoutant une ou plusieurs accroches.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Attention : les offres payantes ne seront visibles auprès du public qu’à partir du début de l’expérimentation.",
            "className": "subtitle",
          },
          "ref": null,
          "rendered": "Attention : les offres payantes ne seront visibles auprès du public qu’à partir du début de l’expérimentation.",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "BlockComponent": null,
            "Tag": null,
            "action": "/offers/undefined",
            "children": Array [
              <div
                className="field-group"
>
                <Field
                                displayValue={[Function]}
                                errors={null}
                                isExpanded={true}
                                label="Titre de l'offre"
                                layout="horizontal"
                                name="name"
                                required={true}
                                size="normal"
                                storeValue={[Function]}
                />
                <Field
                                displayValue={[Function]}
                                errors={null}
                                label="Type"
                                layout="horizontal"
                                name="type"
                                optionLabel="label"
                                optionValue="value"
                                options={undefined}
                                placeholder="Sélectionnez un type d'offre"
                                readOnly={undefined}
                                required={true}
                                size="normal"
                                storeValue={[Function]}
                                sublabel="Le type d'offre ne peut pas être modifié une fois l'offre enregistrée."
                                type="select"
                />
</div>,
              undefined,
              <div>
                <h2
                                className="main-list-title"
                >
                                Infos pratiques
                </h2>
                <div
                                className="field-group"
                >
                                <Field
                                                debug={true}
                                                displayValue={[Function]}
                                                errors={null}
                                                label="Structure"
                                                layout="horizontal"
                                                name="offererId"
                                                options={undefined}
                                                placeholder="Sélectionnez une structure"
                                                readOnly={false}
                                                required={true}
                                                size="normal"
                                                storeValue={[Function]}
                                                type="select"
                                />
                                <Field
                                                displayValue={[Function]}
                                                errors={null}
                                                label="Lieu"
                                                layout="horizontal"
                                                name="venueId"
                                                options={Array []}
                                                placeholder="Sélectionnez un lieu"
                                                readOnly={false}
                                                required={true}
                                                size="normal"
                                                storeValue={[Function]}
                                                type="select"
                                />
                                <Field
                                                displayValue={[Function]}
                                                errors={null}
                                                label="Email auquel envoyer les réservations"
                                                layout="horizontal"
                                                name="bookingEmail"
                                                size="normal"
                                                storeValue={[Function]}
                                                sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                                                type="email"
                                />
                </div>
                <h2
                                className="main-list-title"
                >
                                Infos artistiques
                </h2>
                <div
                                className="field-group"
                >
                                <Field
                                                displayMaxLength={true}
                                                displayValue={[Function]}
                                                errors={null}
                                                isExpanded={true}
                                                label="Description"
                                                layout="horizontal"
                                                maxLength={1000}
                                                name="description"
                                                rows={5}
                                                size="normal"
                                                storeValue={[Function]}
                                                type="textarea"
                                />
                </div>
</div>,
              <hr />,
              <div
                className="field is-grouped is-grouped-centered"
                style={
                                Object {
                                                "justifyContent": "space-between",
                                              }
                }
>
                <div
                                className="control"
                >
                                <button
                                                className="button is-secondary is-medium"
                                                id="cancel-button"
                                                onClick={[Function]}
                                >
                                                Annuler
                                </button>
                </div>
                <div
                                className="control"
                >
                                <SubmitButton
                                                className="button is-primary is-medium"
                                                getDisabled={[Function]}
                                                getTitle={[Function]}
                                                requiredFields={Array []}
                                                type="submit"
                                >
                                                Enregistrer
                                                 
                                </SubmitButton>
                </div>
</div>,
            ],
            "className": null,
            "errorsPatch": Object {},
            "failNotification": "Formulaire non validé",
            "formPatch": Object {},
            "formatPatch": [Function],
            "handleFail": null,
            "handleFailNotification": null,
            "handleFailRedirect": null,
            "handleSuccess": [Function],
            "handleSuccessNotification": null,
            "handleSuccessRedirect": null,
            "method": undefined,
            "name": "offer",
            "normalizer": null,
            "onEnterKey": null,
            "onEscapeKey": null,
            "onSubmit": null,
            "patch": undefined,
            "readOnly": undefined,
            "successNotification": "Formulaire non validé",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Field
                    displayValue={[Function]}
                    errors={null}
                    isExpanded={true}
                    label="Titre de l'offre"
                    layout="horizontal"
                    name="name"
                    required={true}
                    size="normal"
                    storeValue={[Function]}
/>,
                  <Field
                    displayValue={[Function]}
                    errors={null}
                    label="Type"
                    layout="horizontal"
                    name="type"
                    optionLabel="label"
                    optionValue="value"
                    options={undefined}
                    placeholder="Sélectionnez un type d'offre"
                    readOnly={undefined}
                    required={true}
                    size="normal"
                    storeValue={[Function]}
                    sublabel="Le type d'offre ne peut pas être modifié une fois l'offre enregistrée."
                    type="select"
/>,
                  false,
                  false,
                  undefined,
                ],
                "className": "field-group",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "displayValue": [Function],
                    "errors": null,
                    "isExpanded": true,
                    "label": "Titre de l'offre",
                    "layout": "horizontal",
                    "name": "name",
                    "required": true,
                    "size": "normal",
                    "storeValue": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "displayValue": [Function],
                    "errors": null,
                    "label": "Type",
                    "layout": "horizontal",
                    "name": "type",
                    "optionLabel": "label",
                    "optionValue": "value",
                    "options": undefined,
                    "placeholder": "Sélectionnez un type d'offre",
                    "readOnly": undefined,
                    "required": true,
                    "size": "normal",
                    "storeValue": [Function],
                    "sublabel": "Le type d'offre ne peut pas être modifié une fois l'offre enregistrée.",
                    "type": "select",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                false,
                false,
                undefined,
              ],
              "type": "div",
            },
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2
                    className="main-list-title"
>
                    Infos pratiques
</h2>,
                  <div
                    className="field-group"
>
                    <Field
                                        debug={true}
                                        displayValue={[Function]}
                                        errors={null}
                                        label="Structure"
                                        layout="horizontal"
                                        name="offererId"
                                        options={undefined}
                                        placeholder="Sélectionnez une structure"
                                        readOnly={false}
                                        required={true}
                                        size="normal"
                                        storeValue={[Function]}
                                        type="select"
                    />
                    <Field
                                        displayValue={[Function]}
                                        errors={null}
                                        label="Lieu"
                                        layout="horizontal"
                                        name="venueId"
                                        options={Array []}
                                        placeholder="Sélectionnez un lieu"
                                        readOnly={false}
                                        required={true}
                                        size="normal"
                                        storeValue={[Function]}
                                        type="select"
                    />
                    <Field
                                        displayValue={[Function]}
                                        errors={null}
                                        label="Email auquel envoyer les réservations"
                                        layout="horizontal"
                                        name="bookingEmail"
                                        size="normal"
                                        storeValue={[Function]}
                                        sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                                        type="email"
                    />
</div>,
                  <h2
                    className="main-list-title"
>
                    Infos artistiques
</h2>,
                  <div
                    className="field-group"
>
                    <Field
                                        displayMaxLength={true}
                                        displayValue={[Function]}
                                        errors={null}
                                        isExpanded={true}
                                        label="Description"
                                        layout="horizontal"
                                        maxLength={1000}
                                        name="description"
                                        rows={5}
                                        size="normal"
                                        storeValue={[Function]}
                                        type="textarea"
                    />
</div>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Infos pratiques",
                    "className": "main-list-title",
                  },
                  "ref": null,
                  "rendered": "Infos pratiques",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Field
                        debug={true}
                        displayValue={[Function]}
                        errors={null}
                        label="Structure"
                        layout="horizontal"
                        name="offererId"
                        options={undefined}
                        placeholder="Sélectionnez une structure"
                        readOnly={false}
                        required={true}
                        size="normal"
                        storeValue={[Function]}
                        type="select"
/>,
                      undefined,
                      <Field
                        displayValue={[Function]}
                        errors={null}
                        label="Lieu"
                        layout="horizontal"
                        name="venueId"
                        options={Array []}
                        placeholder="Sélectionnez un lieu"
                        readOnly={false}
                        required={true}
                        size="normal"
                        storeValue={[Function]}
                        type="select"
/>,
                      undefined,
                      false,
                      undefined,
                      <Field
                        displayValue={[Function]}
                        errors={null}
                        label="Email auquel envoyer les réservations"
                        layout="horizontal"
                        name="bookingEmail"
                        size="normal"
                        storeValue={[Function]}
                        sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                        type="email"
/>,
                    ],
                    "className": "field-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "debug": true,
                        "displayValue": [Function],
                        "errors": null,
                        "label": "Structure",
                        "layout": "horizontal",
                        "name": "offererId",
                        "options": undefined,
                        "placeholder": "Sélectionnez une structure",
                        "readOnly": false,
                        "required": true,
                        "size": "normal",
                        "storeValue": [Function],
                        "type": "select",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    undefined,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "displayValue": [Function],
                        "errors": null,
                        "label": "Lieu",
                        "layout": "horizontal",
                        "name": "venueId",
                        "options": Array [],
                        "placeholder": "Sélectionnez un lieu",
                        "readOnly": false,
                        "required": true,
                        "size": "normal",
                        "storeValue": [Function],
                        "type": "select",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    undefined,
                    false,
                    undefined,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "displayValue": [Function],
                        "errors": null,
                        "label": "Email auquel envoyer les réservations",
                        "layout": "horizontal",
                        "name": "bookingEmail",
                        "size": "normal",
                        "storeValue": [Function],
                        "sublabel": "Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations",
                        "type": "email",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Infos artistiques",
                    "className": "main-list-title",
                  },
                  "ref": null,
                  "rendered": "Infos artistiques",
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Field
                        displayMaxLength={true}
                        displayValue={[Function]}
                        errors={null}
                        isExpanded={true}
                        label="Description"
                        layout="horizontal"
                        maxLength={1000}
                        name="description"
                        rows={5}
                        size="normal"
                        storeValue={[Function]}
                        type="textarea"
/>,
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ],
                    "className": "field-group",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "displayMaxLength": true,
                        "displayValue": [Function],
                        "errors": null,
                        "isExpanded": true,
                        "label": "Description",
                        "layout": "horizontal",
                        "maxLength": 1000,
                        "name": "description",
                        "rows": 5,
                        "size": "normal",
                        "storeValue": [Function],
                        "type": "textarea",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    false,
                    false,
                    false,
                    false,
                    false,
                    false,
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "hr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="control"
>
                    <button
                                        className="button is-secondary is-medium"
                                        id="cancel-button"
                                        onClick={[Function]}
                    >
                                        Annuler
                    </button>
</div>,
                  <div
                    className="control"
>
                    <SubmitButton
                                        className="button is-primary is-medium"
                                        getDisabled={[Function]}
                                        getTitle={[Function]}
                                        requiredFields={Array []}
                                        type="submit"
                    >
                                        Enregistrer
                                         
                    </SubmitButton>
</div>,
                ],
                "className": "field is-grouped is-grouped-centered",
                "style": Object {
                  "justifyContent": "space-between",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-secondary is-medium"
                      id="cancel-button"
                      onClick={[Function]}
>
                      Annuler
</button>,
                    "className": "control",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Annuler",
                      "className": "button is-secondary is-medium",
                      "id": "cancel-button",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Annuler",
                    "type": "button",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <SubmitButton
                      className="button is-primary is-medium"
                      getDisabled={[Function]}
                      getTitle={[Function]}
                      requiredFields={Array []}
                      type="submit"
>
                      Enregistrer
                       
</SubmitButton>,
                    "className": "control",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        "Enregistrer",
                        " ",
                        undefined,
                      ],
                      "className": "button is-primary is-medium",
                      "getDisabled": [Function],
                      "getTitle": [Function],
                      "requiredFields": Array [],
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Enregistrer",
                      " ",
                      undefined,
                    ],
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "backTo": Object {
          "label": "Vos offres",
          "path": "/offres",
        },
        "children": <HeroSection
          subtitle={undefined}
          title="Détails de l'offre"
>
          <p
                    className="subtitle"
          >
                    Renseignez les détails de cette offre, puis mettez-la en avant en ajoutant une ou plusieurs accroches.
          </p>
          <p
                    className="subtitle"
          >
                    Attention : les offres payantes ne seront visibles auprès du public qu’à partir du début de l’expérimentation.
          </p>
          <withRouter(Connect(_Form))
                    BlockComponent={null}
                    Tag={null}
                    action="/offers/undefined"
                    className={null}
                    errorsPatch={Object {}}
                    failNotification="Formulaire non validé"
                    formPatch={Object {}}
                    formatPatch={[Function]}
                    handleFail={null}
                    handleFailNotification={null}
                    handleFailRedirect={null}
                    handleSuccess={[Function]}
                    handleSuccessNotification={null}
                    handleSuccessRedirect={null}
                    method={undefined}
                    name="offer"
                    normalizer={null}
                    onEnterKey={null}
                    onEscapeKey={null}
                    onSubmit={null}
                    patch={undefined}
                    readOnly={undefined}
                    successNotification="Formulaire non validé"
          >
                    <div
                              className="field-group"
                    >
                              <Field
                                        displayValue={[Function]}
                                        errors={null}
                                        isExpanded={true}
                                        label="Titre de l'offre"
                                        layout="horizontal"
                                        name="name"
                                        required={true}
                                        size="normal"
                                        storeValue={[Function]}
                              />
                              <Field
                                        displayValue={[Function]}
                                        errors={null}
                                        label="Type"
                                        layout="horizontal"
                                        name="type"
                                        optionLabel="label"
                                        optionValue="value"
                                        options={undefined}
                                        placeholder="Sélectionnez un type d'offre"
                                        readOnly={undefined}
                                        required={true}
                                        size="normal"
                                        storeValue={[Function]}
                                        sublabel="Le type d'offre ne peut pas être modifié une fois l'offre enregistrée."
                                        type="select"
                              />
                    </div>
                    <div>
                              <h2
                                        className="main-list-title"
                              >
                                        Infos pratiques
                              </h2>
                              <div
                                        className="field-group"
                              >
                                        <Field
                                                  debug={true}
                                                  displayValue={[Function]}
                                                  errors={null}
                                                  label="Structure"
                                                  layout="horizontal"
                                                  name="offererId"
                                                  options={undefined}
                                                  placeholder="Sélectionnez une structure"
                                                  readOnly={false}
                                                  required={true}
                                                  size="normal"
                                                  storeValue={[Function]}
                                                  type="select"
                                        />
                                        <Field
                                                  displayValue={[Function]}
                                                  errors={null}
                                                  label="Lieu"
                                                  layout="horizontal"
                                                  name="venueId"
                                                  options={Array []}
                                                  placeholder="Sélectionnez un lieu"
                                                  readOnly={false}
                                                  required={true}
                                                  size="normal"
                                                  storeValue={[Function]}
                                                  type="select"
                                        />
                                        <Field
                                                  displayValue={[Function]}
                                                  errors={null}
                                                  label="Email auquel envoyer les réservations"
                                                  layout="horizontal"
                                                  name="bookingEmail"
                                                  size="normal"
                                                  storeValue={[Function]}
                                                  sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                                                  type="email"
                                        />
                              </div>
                              <h2
                                        className="main-list-title"
                              >
                                        Infos artistiques
                              </h2>
                              <div
                                        className="field-group"
                              >
                                        <Field
                                                  displayMaxLength={true}
                                                  displayValue={[Function]}
                                                  errors={null}
                                                  isExpanded={true}
                                                  label="Description"
                                                  layout="horizontal"
                                                  maxLength={1000}
                                                  name="description"
                                                  rows={5}
                                                  size="normal"
                                                  storeValue={[Function]}
                                                  type="textarea"
                                        />
                              </div>
                    </div>
                    <hr />
                    <div
                              className="field is-grouped is-grouped-centered"
                              style={
                                        Object {
                                                  "justifyContent": "space-between",
                                                }
                              }
                    >
                              <div
                                        className="control"
                              >
                                        <button
                                                  className="button is-secondary is-medium"
                                                  id="cancel-button"
                                                  onClick={[Function]}
                                        >
                                                  Annuler
                                        </button>
                              </div>
                              <div
                                        className="control"
                              >
                                        <SubmitButton
                                                  className="button is-primary is-medium"
                                                  getDisabled={[Function]}
                                                  getTitle={[Function]}
                                                  requiredFields={Array []}
                                                  type="submit"
                                        >
                                                  Enregistrer
                                                   
                                        </SubmitButton>
                              </div>
                    </div>
          </withRouter(Connect(_Form))>
</HeroSection>,
        "handleDataRequest": [Function],
        "name": "offer",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <p
              className="subtitle"
>
              Renseignez les détails de cette offre, puis mettez-la en avant en ajoutant une ou plusieurs accroches.
</p>,
            <p
              className="subtitle"
>
              Attention : les offres payantes ne seront visibles auprès du public qu’à partir du début de l’expérimentation.
</p>,
            <withRouter(Connect(_Form))
              BlockComponent={null}
              Tag={null}
              action="/offers/undefined"
              className={null}
              errorsPatch={Object {}}
              failNotification="Formulaire non validé"
              formPatch={Object {}}
              formatPatch={[Function]}
              handleFail={null}
              handleFailNotification={null}
              handleFailRedirect={null}
              handleSuccess={[Function]}
              handleSuccessNotification={null}
              handleSuccessRedirect={null}
              method={undefined}
              name="offer"
              normalizer={null}
              onEnterKey={null}
              onEscapeKey={null}
              onSubmit={null}
              patch={undefined}
              readOnly={undefined}
              successNotification="Formulaire non validé"
>
              <div
                            className="field-group"
              >
                            <Field
                                          displayValue={[Function]}
                                          errors={null}
                                          isExpanded={true}
                                          label="Titre de l'offre"
                                          layout="horizontal"
                                          name="name"
                                          required={true}
                                          size="normal"
                                          storeValue={[Function]}
                            />
                            <Field
                                          displayValue={[Function]}
                                          errors={null}
                                          label="Type"
                                          layout="horizontal"
                                          name="type"
                                          optionLabel="label"
                                          optionValue="value"
                                          options={undefined}
                                          placeholder="Sélectionnez un type d'offre"
                                          readOnly={undefined}
                                          required={true}
                                          size="normal"
                                          storeValue={[Function]}
                                          sublabel="Le type d'offre ne peut pas être modifié une fois l'offre enregistrée."
                                          type="select"
                            />
              </div>
              <div>
                            <h2
                                          className="main-list-title"
                            >
                                          Infos pratiques
                            </h2>
                            <div
                                          className="field-group"
                            >
                                          <Field
                                                        debug={true}
                                                        displayValue={[Function]}
                                                        errors={null}
                                                        label="Structure"
                                                        layout="horizontal"
                                                        name="offererId"
                                                        options={undefined}
                                                        placeholder="Sélectionnez une structure"
                                                        readOnly={false}
                                                        required={true}
                                                        size="normal"
                                                        storeValue={[Function]}
                                                        type="select"
                                          />
                                          <Field
                                                        displayValue={[Function]}
                                                        errors={null}
                                                        label="Lieu"
                                                        layout="horizontal"
                                                        name="venueId"
                                                        options={Array []}
                                                        placeholder="Sélectionnez un lieu"
                                                        readOnly={false}
                                                        required={true}
                                                        size="normal"
                                                        storeValue={[Function]}
                                                        type="select"
                                          />
                                          <Field
                                                        displayValue={[Function]}
                                                        errors={null}
                                                        label="Email auquel envoyer les réservations"
                                                        layout="horizontal"
                                                        name="bookingEmail"
                                                        size="normal"
                                                        storeValue={[Function]}
                                                        sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                                                        type="email"
                                          />
                            </div>
                            <h2
                                          className="main-list-title"
                            >
                                          Infos artistiques
                            </h2>
                            <div
                                          className="field-group"
                            >
                                          <Field
                                                        displayMaxLength={true}
                                                        displayValue={[Function]}
                                                        errors={null}
                                                        isExpanded={true}
                                                        label="Description"
                                                        layout="horizontal"
                                                        maxLength={1000}
                                                        name="description"
                                                        rows={5}
                                                        size="normal"
                                                        storeValue={[Function]}
                                                        type="textarea"
                                          />
                            </div>
              </div>
              <hr />
              <div
                            className="field is-grouped is-grouped-centered"
                            style={
                                          Object {
                                                        "justifyContent": "space-between",
                                                      }
                            }
              >
                            <div
                                          className="control"
                            >
                                          <button
                                                        className="button is-secondary is-medium"
                                                        id="cancel-button"
                                                        onClick={[Function]}
                                          >
                                                        Annuler
                                          </button>
                            </div>
                            <div
                                          className="control"
                            >
                                          <SubmitButton
                                                        className="button is-primary is-medium"
                                                        getDisabled={[Function]}
                                                        getTitle={[Function]}
                                                        requiredFields={Array []}
                                                        type="submit"
                                          >
                                                        Enregistrer
                                                         
                                          </SubmitButton>
                            </div>
              </div>
</withRouter(Connect(_Form))>,
          ],
          "subtitle": undefined,
          "title": "Détails de l'offre",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Renseignez les détails de cette offre, puis mettez-la en avant en ajoutant une ou plusieurs accroches.",
              "className": "subtitle",
            },
            "ref": null,
            "rendered": "Renseignez les détails de cette offre, puis mettez-la en avant en ajoutant une ou plusieurs accroches.",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Attention : les offres payantes ne seront visibles auprès du public qu’à partir du début de l’expérimentation.",
              "className": "subtitle",
            },
            "ref": null,
            "rendered": "Attention : les offres payantes ne seront visibles auprès du public qu’à partir du début de l’expérimentation.",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "BlockComponent": null,
              "Tag": null,
              "action": "/offers/undefined",
              "children": Array [
                <div
                  className="field-group"
>
                  <Field
                                    displayValue={[Function]}
                                    errors={null}
                                    isExpanded={true}
                                    label="Titre de l'offre"
                                    layout="horizontal"
                                    name="name"
                                    required={true}
                                    size="normal"
                                    storeValue={[Function]}
                  />
                  <Field
                                    displayValue={[Function]}
                                    errors={null}
                                    label="Type"
                                    layout="horizontal"
                                    name="type"
                                    optionLabel="label"
                                    optionValue="value"
                                    options={undefined}
                                    placeholder="Sélectionnez un type d'offre"
                                    readOnly={undefined}
                                    required={true}
                                    size="normal"
                                    storeValue={[Function]}
                                    sublabel="Le type d'offre ne peut pas être modifié une fois l'offre enregistrée."
                                    type="select"
                  />
</div>,
                undefined,
                <div>
                  <h2
                                    className="main-list-title"
                  >
                                    Infos pratiques
                  </h2>
                  <div
                                    className="field-group"
                  >
                                    <Field
                                                      debug={true}
                                                      displayValue={[Function]}
                                                      errors={null}
                                                      label="Structure"
                                                      layout="horizontal"
                                                      name="offererId"
                                                      options={undefined}
                                                      placeholder="Sélectionnez une structure"
                                                      readOnly={false}
                                                      required={true}
                                                      size="normal"
                                                      storeValue={[Function]}
                                                      type="select"
                                    />
                                    <Field
                                                      displayValue={[Function]}
                                                      errors={null}
                                                      label="Lieu"
                                                      layout="horizontal"
                                                      name="venueId"
                                                      options={Array []}
                                                      placeholder="Sélectionnez un lieu"
                                                      readOnly={false}
                                                      required={true}
                                                      size="normal"
                                                      storeValue={[Function]}
                                                      type="select"
                                    />
                                    <Field
                                                      displayValue={[Function]}
                                                      errors={null}
                                                      label="Email auquel envoyer les réservations"
                                                      layout="horizontal"
                                                      name="bookingEmail"
                                                      size="normal"
                                                      storeValue={[Function]}
                                                      sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                                                      type="email"
                                    />
                  </div>
                  <h2
                                    className="main-list-title"
                  >
                                    Infos artistiques
                  </h2>
                  <div
                                    className="field-group"
                  >
                                    <Field
                                                      displayMaxLength={true}
                                                      displayValue={[Function]}
                                                      errors={null}
                                                      isExpanded={true}
                                                      label="Description"
                                                      layout="horizontal"
                                                      maxLength={1000}
                                                      name="description"
                                                      rows={5}
                                                      size="normal"
                                                      storeValue={[Function]}
                                                      type="textarea"
                                    />
                  </div>
</div>,
                <hr />,
                <div
                  className="field is-grouped is-grouped-centered"
                  style={
                                    Object {
                                                      "justifyContent": "space-between",
                                                    }
                  }
>
                  <div
                                    className="control"
                  >
                                    <button
                                                      className="button is-secondary is-medium"
                                                      id="cancel-button"
                                                      onClick={[Function]}
                                    >
                                                      Annuler
                                    </button>
                  </div>
                  <div
                                    className="control"
                  >
                                    <SubmitButton
                                                      className="button is-primary is-medium"
                                                      getDisabled={[Function]}
                                                      getTitle={[Function]}
                                                      requiredFields={Array []}
                                                      type="submit"
                                    >
                                                      Enregistrer
                                                       
                                    </SubmitButton>
                  </div>
</div>,
              ],
              "className": null,
              "errorsPatch": Object {},
              "failNotification": "Formulaire non validé",
              "formPatch": Object {},
              "formatPatch": [Function],
              "handleFail": null,
              "handleFailNotification": null,
              "handleFailRedirect": null,
              "handleSuccess": [Function],
              "handleSuccessNotification": null,
              "handleSuccessRedirect": null,
              "method": undefined,
              "name": "offer",
              "normalizer": null,
              "onEnterKey": null,
              "onEscapeKey": null,
              "onSubmit": null,
              "patch": undefined,
              "readOnly": undefined,
              "successNotification": "Formulaire non validé",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Field
                      displayValue={[Function]}
                      errors={null}
                      isExpanded={true}
                      label="Titre de l'offre"
                      layout="horizontal"
                      name="name"
                      required={true}
                      size="normal"
                      storeValue={[Function]}
/>,
                    <Field
                      displayValue={[Function]}
                      errors={null}
                      label="Type"
                      layout="horizontal"
                      name="type"
                      optionLabel="label"
                      optionValue="value"
                      options={undefined}
                      placeholder="Sélectionnez un type d'offre"
                      readOnly={undefined}
                      required={true}
                      size="normal"
                      storeValue={[Function]}
                      sublabel="Le type d'offre ne peut pas être modifié une fois l'offre enregistrée."
                      type="select"
/>,
                    false,
                    false,
                    undefined,
                  ],
                  "className": "field-group",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "displayValue": [Function],
                      "errors": null,
                      "isExpanded": true,
                      "label": "Titre de l'offre",
                      "layout": "horizontal",
                      "name": "name",
                      "required": true,
                      "size": "normal",
                      "storeValue": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "displayValue": [Function],
                      "errors": null,
                      "label": "Type",
                      "layout": "horizontal",
                      "name": "type",
                      "optionLabel": "label",
                      "optionValue": "value",
                      "options": undefined,
                      "placeholder": "Sélectionnez un type d'offre",
                      "readOnly": undefined,
                      "required": true,
                      "size": "normal",
                      "storeValue": [Function],
                      "sublabel": "Le type d'offre ne peut pas être modifié une fois l'offre enregistrée.",
                      "type": "select",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  false,
                  false,
                  undefined,
                ],
                "type": "div",
              },
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2
                      className="main-list-title"
>
                      Infos pratiques
</h2>,
                    <div
                      className="field-group"
>
                      <Field
                                            debug={true}
                                            displayValue={[Function]}
                                            errors={null}
                                            label="Structure"
                                            layout="horizontal"
                                            name="offererId"
                                            options={undefined}
                                            placeholder="Sélectionnez une structure"
                                            readOnly={false}
                                            required={true}
                                            size="normal"
                                            storeValue={[Function]}
                                            type="select"
                      />
                      <Field
                                            displayValue={[Function]}
                                            errors={null}
                                            label="Lieu"
                                            layout="horizontal"
                                            name="venueId"
                                            options={Array []}
                                            placeholder="Sélectionnez un lieu"
                                            readOnly={false}
                                            required={true}
                                            size="normal"
                                            storeValue={[Function]}
                                            type="select"
                      />
                      <Field
                                            displayValue={[Function]}
                                            errors={null}
                                            label="Email auquel envoyer les réservations"
                                            layout="horizontal"
                                            name="bookingEmail"
                                            size="normal"
                                            storeValue={[Function]}
                                            sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                                            type="email"
                      />
</div>,
                    <h2
                      className="main-list-title"
>
                      Infos artistiques
</h2>,
                    <div
                      className="field-group"
>
                      <Field
                                            displayMaxLength={true}
                                            displayValue={[Function]}
                                            errors={null}
                                            isExpanded={true}
                                            label="Description"
                                            layout="horizontal"
                                            maxLength={1000}
                                            name="description"
                                            rows={5}
                                            size="normal"
                                            storeValue={[Function]}
                                            type="textarea"
                      />
</div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Infos pratiques",
                      "className": "main-list-title",
                    },
                    "ref": null,
                    "rendered": "Infos pratiques",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Field
                          debug={true}
                          displayValue={[Function]}
                          errors={null}
                          label="Structure"
                          layout="horizontal"
                          name="offererId"
                          options={undefined}
                          placeholder="Sélectionnez une structure"
                          readOnly={false}
                          required={true}
                          size="normal"
                          storeValue={[Function]}
                          type="select"
/>,
                        undefined,
                        <Field
                          displayValue={[Function]}
                          errors={null}
                          label="Lieu"
                          layout="horizontal"
                          name="venueId"
                          options={Array []}
                          placeholder="Sélectionnez un lieu"
                          readOnly={false}
                          required={true}
                          size="normal"
                          storeValue={[Function]}
                          type="select"
/>,
                        undefined,
                        false,
                        undefined,
                        <Field
                          displayValue={[Function]}
                          errors={null}
                          label="Email auquel envoyer les réservations"
                          layout="horizontal"
                          name="bookingEmail"
                          size="normal"
                          storeValue={[Function]}
                          sublabel="Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations"
                          type="email"
/>,
                      ],
                      "className": "field-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "debug": true,
                          "displayValue": [Function],
                          "errors": null,
                          "label": "Structure",
                          "layout": "horizontal",
                          "name": "offererId",
                          "options": undefined,
                          "placeholder": "Sélectionnez une structure",
                          "readOnly": false,
                          "required": true,
                          "size": "normal",
                          "storeValue": [Function],
                          "type": "select",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "displayValue": [Function],
                          "errors": null,
                          "label": "Lieu",
                          "layout": "horizontal",
                          "name": "venueId",
                          "options": Array [],
                          "placeholder": "Sélectionnez un lieu",
                          "readOnly": false,
                          "required": true,
                          "size": "normal",
                          "storeValue": [Function],
                          "type": "select",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      undefined,
                      false,
                      undefined,
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "displayValue": [Function],
                          "errors": null,
                          "label": "Email auquel envoyer les réservations",
                          "layout": "horizontal",
                          "name": "bookingEmail",
                          "size": "normal",
                          "storeValue": [Function],
                          "sublabel": "Merci de laisser ce champ vide si vous ne souhaitez pas recevoir d'email lors des réservations",
                          "type": "email",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Infos artistiques",
                      "className": "main-list-title",
                    },
                    "ref": null,
                    "rendered": "Infos artistiques",
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Field
                          displayMaxLength={true}
                          displayValue={[Function]}
                          errors={null}
                          isExpanded={true}
                          label="Description"
                          layout="horizontal"
                          maxLength={1000}
                          name="description"
                          rows={5}
                          size="normal"
                          storeValue={[Function]}
                          type="textarea"
/>,
                        false,
                        false,
                        false,
                        false,
                        false,
                        false,
                      ],
                      "className": "field-group",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "displayMaxLength": true,
                          "displayValue": [Function],
                          "errors": null,
                          "isExpanded": true,
                          "label": "Description",
                          "layout": "horizontal",
                          "maxLength": 1000,
                          "name": "description",
                          "rows": 5,
                          "size": "normal",
                          "storeValue": [Function],
                          "type": "textarea",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      false,
                      false,
                      false,
                      false,
                      false,
                      false,
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "hr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="control"
>
                      <button
                                            className="button is-secondary is-medium"
                                            id="cancel-button"
                                            onClick={[Function]}
                      >
                                            Annuler
                      </button>
</div>,
                    <div
                      className="control"
>
                      <SubmitButton
                                            className="button is-primary is-medium"
                                            getDisabled={[Function]}
                                            getTitle={[Function]}
                                            requiredFields={Array []}
                                            type="submit"
                      >
                                            Enregistrer
                                             
                      </SubmitButton>
</div>,
                  ],
                  "className": "field is-grouped is-grouped-centered",
                  "style": Object {
                    "justifyContent": "space-between",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-secondary is-medium"
                        id="cancel-button"
                        onClick={[Function]}
>
                        Annuler
</button>,
                      "className": "control",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Annuler",
                        "className": "button is-secondary is-medium",
                        "id": "cancel-button",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": "Annuler",
                      "type": "button",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <SubmitButton
                        className="button is-primary is-medium"
                        getDisabled={[Function]}
                        getTitle={[Function]}
                        requiredFields={Array []}
                        type="submit"
>
                        Enregistrer
                         
</SubmitButton>,
                      "className": "control",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          "Enregistrer",
                          " ",
                          undefined,
                        ],
                        "className": "button is-primary is-medium",
                        "getDisabled": [Function],
                        "getTitle": [Function],
                        "requiredFields": Array [],
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Enregistrer",
                        " ",
                        undefined,
                      ],
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
