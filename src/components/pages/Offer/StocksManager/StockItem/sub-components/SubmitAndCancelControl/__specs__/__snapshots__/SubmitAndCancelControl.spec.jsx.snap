// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offer | StocksManagerContainer | StockItem | SubmitAndCancelControl  should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SubmitAndCancelControl
    canSubmit={false}
    form={Object {}}
    handleSubmit={[Function]}
    isRequestPending={false}
    query={Object {}}
    stockId={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <td>
          <button
            className="button is-primary is-small submitStep"
            disabled={true}
            onClick={[Function]}
            type="submit"
          >
            Valider
          </button>
        </td>,
        <td
          className="is-clipped"
        >
          <button
            className="button is-tertiary is-small cancel-step"
            onClick={[Function]}
            type="reset"
          >
            Annuler
          </button>
        </td>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="button is-primary is-small submitStep"
            disabled={true}
            onClick={[Function]}
            type="submit"
          >
            Valider
          </button>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Valider",
            "className": "button is-primary is-small submitStep",
            "disabled": true,
            "onClick": [Function],
            "type": "submit",
          },
          "ref": null,
          "rendered": "Valider",
          "type": "button",
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="button is-tertiary is-small cancel-step"
            onClick={[Function]}
            type="reset"
          >
            Annuler
          </button>,
          "className": "is-clipped",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Annuler",
            "className": "button is-tertiary is-small cancel-step",
            "onClick": [Function],
            "type": "reset",
          },
          "ref": null,
          "rendered": "Annuler",
          "type": "button",
        },
        "type": "td",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <td>
            <button
              className="button is-primary is-small submitStep"
              disabled={true}
              onClick={[Function]}
              type="submit"
            >
              Valider
            </button>
          </td>,
          <td
            className="is-clipped"
          >
            <button
              className="button is-tertiary is-small cancel-step"
              onClick={[Function]}
              type="reset"
            >
              Annuler
            </button>
          </td>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="button is-primary is-small submitStep"
              disabled={true}
              onClick={[Function]}
              type="submit"
            >
              Valider
            </button>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Valider",
              "className": "button is-primary is-small submitStep",
              "disabled": true,
              "onClick": [Function],
              "type": "submit",
            },
            "ref": null,
            "rendered": "Valider",
            "type": "button",
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="button is-tertiary is-small cancel-step"
              onClick={[Function]}
              type="reset"
            >
              Annuler
            </button>,
            "className": "is-clipped",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Annuler",
              "className": "button is-tertiary is-small cancel-step",
              "onClick": [Function],
              "type": "reset",
            },
            "ref": null,
            "rendered": "Annuler",
            "type": "button",
          },
          "type": "td",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
