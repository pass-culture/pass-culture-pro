// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offer | StockItem | EventOrThingFields snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
        Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          }
    }
>
    <EventOrThingFields
        beginningDatetime={null}
        closeInfo={[Function]}
        dispatch={[Function]}
        isEventStock={true}
        offer={null}
        parseFormChild={[Function]}
        readOnly={true}
        showInfo={[Function]}
        stock={null}
    />
</Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "beginningDatetime": null,
      "closeInfo": [Function],
      "dispatch": [Function],
      "isEventStock": true,
      "offer": null,
      "parseFormChild": [Function],
      "readOnly": true,
      "showInfo": [Function],
      "stock": null,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "beginningDatetime": null,
        "closeInfo": [Function],
        "dispatch": [Function],
        "isEventStock": true,
        "offer": null,
        "parseFormChild": [Function],
        "readOnly": true,
        "showInfo": [Function],
        "stock": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): Object {
    "store": Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    },
    "storeSubscription": null,
  },
}
`;
