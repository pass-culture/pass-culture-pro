// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offer | EventOccurrenceAndStockItem | DateTimeForm snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DateTimeForm
    eventOccurrences={Array []}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "BlockComponent": null,
      "Tag": null,
      "action": "/eventOccurrences/",
      "children": Array [
        <td>
          <Field
                    displayValue={[Function]}
                    errors={null}
                    layout="horizontal"
                    name="offerId"
                    size="normal"
                    storeValue={[Function]}
                    type="hidden"
          />
          <Field
                    displayValue={[Function]}
                    errors={null}
                    layout="horizontal"
                    name="venueId"
                    size="normal"
                    storeValue={[Function]}
                    type="hidden"
          />
          <Field
                    displayValue={[Function]}
                    errors={null}
                    layout="horizontal"
                    minDate={undefined}
                    name="endDatetime"
                    size="normal"
                    storeValue={[Function]}
                    type="hidden"
          />
          <Field
                    debug={true}
                    displayValue={[Function]}
                    errors={null}
                    highlightedDates={Array []}
                    layout="horizontal"
                    minDate="today"
                    name="beginningDate"
                    patchKey="beginningDatetime"
                    readOnly={undefined}
                    required={true}
                    size="normal"
                    storeValue={[Function]}
                    title="Date"
                    type="date"
                    tz={undefined}
          />
</td>,
        <td>
          <Field
                    displayValue={[Function]}
                    errors={null}
                    layout="horizontal"
                    name="beginningTime"
                    patchKey="beginningDatetime"
                    readOnly={undefined}
                    required={true}
                    size="normal"
                    storeValue={[Function]}
                    title="Heure"
                    type="time"
                    tz={undefined}
          />
</td>,
        <td>
          <Field
                    displayValue={[Function]}
                    errors={null}
                    layout="horizontal"
                    name="endTime"
                    patchKey="endDatetime"
                    readOnly={undefined}
                    required={true}
                    size="normal"
                    storeValue={[Function]}
                    title="Heure de fin"
                    type="time"
                    tz={undefined}
          />
</td>,
        <Unknown>
          <td>
                    <SubmitButton
                              className="button is-primary is-small submitStep"
                              getDisabled={[Function]}
                              getTitle={[Function]}
                              requiredFields={Array []}
                              type="submit"
                    >
                              Suivant
                    </SubmitButton>
          </td>
          <td />
          <td />
          <td />
          <td
                    className="is-clipped"
          >
                    <NavLink
                              activeClassName="active"
                              aria-current="page"
                              className="button is-secondary is-small cancel-step"
                              to="/offres/undefined?gestion"
                    >
                              Annuler
                    </NavLink>
          </td>
</Unknown>,
      ],
      "className": null,
      "errorsPatch": Object {},
      "failNotification": "Formulaire non validé",
      "formPatch": Object {},
      "formatPatch": [Function],
      "handleFail": null,
      "handleFailNotification": null,
      "handleFailRedirect": null,
      "handleSuccess": [Function],
      "handleSuccessNotification": null,
      "handleSuccessRedirect": null,
      "layout": "input-only",
      "name": "eventOccurrence",
      "normalizer": null,
      "onEnterKey": null,
      "onEscapeKey": null,
      "onSubmit": null,
      "patch": undefined,
      "readOnly": undefined,
      "size": "small",
      "successNotification": "Formulaire non validé",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Field
              displayValue={[Function]}
              errors={null}
              layout="horizontal"
              name="offerId"
              size="normal"
              storeValue={[Function]}
              type="hidden"
/>,
            <Field
              displayValue={[Function]}
              errors={null}
              layout="horizontal"
              name="venueId"
              size="normal"
              storeValue={[Function]}
              type="hidden"
/>,
            <Field
              displayValue={[Function]}
              errors={null}
              layout="horizontal"
              minDate={undefined}
              name="endDatetime"
              size="normal"
              storeValue={[Function]}
              type="hidden"
/>,
            <Field
              debug={true}
              displayValue={[Function]}
              errors={null}
              highlightedDates={Array []}
              layout="horizontal"
              minDate="today"
              name="beginningDate"
              patchKey="beginningDatetime"
              readOnly={undefined}
              required={true}
              size="normal"
              storeValue={[Function]}
              title="Date"
              type="date"
              tz={undefined}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "displayValue": [Function],
              "errors": null,
              "layout": "horizontal",
              "name": "offerId",
              "size": "normal",
              "storeValue": [Function],
              "type": "hidden",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "displayValue": [Function],
              "errors": null,
              "layout": "horizontal",
              "name": "venueId",
              "size": "normal",
              "storeValue": [Function],
              "type": "hidden",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "displayValue": [Function],
              "errors": null,
              "layout": "horizontal",
              "minDate": undefined,
              "name": "endDatetime",
              "size": "normal",
              "storeValue": [Function],
              "type": "hidden",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "debug": true,
              "displayValue": [Function],
              "errors": null,
              "highlightedDates": Array [],
              "layout": "horizontal",
              "minDate": "today",
              "name": "beginningDate",
              "patchKey": "beginningDatetime",
              "readOnly": undefined,
              "required": true,
              "size": "normal",
              "storeValue": [Function],
              "title": "Date",
              "type": "date",
              "tz": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Field
            displayValue={[Function]}
            errors={null}
            layout="horizontal"
            name="beginningTime"
            patchKey="beginningDatetime"
            readOnly={undefined}
            required={true}
            size="normal"
            storeValue={[Function]}
            title="Heure"
            type="time"
            tz={undefined}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "displayValue": [Function],
            "errors": null,
            "layout": "horizontal",
            "name": "beginningTime",
            "patchKey": "beginningDatetime",
            "readOnly": undefined,
            "required": true,
            "size": "normal",
            "storeValue": [Function],
            "title": "Heure",
            "type": "time",
            "tz": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Field
            displayValue={[Function]}
            errors={null}
            layout="horizontal"
            name="endTime"
            patchKey="endDatetime"
            readOnly={undefined}
            required={true}
            size="normal"
            storeValue={[Function]}
            title="Heure de fin"
            type="time"
            tz={undefined}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "displayValue": [Function],
            "errors": null,
            "layout": "horizontal",
            "name": "endTime",
            "patchKey": "endDatetime",
            "readOnly": undefined,
            "required": true,
            "size": "normal",
            "storeValue": [Function],
            "title": "Heure de fin",
            "type": "time",
            "tz": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <td>
              <SubmitButton
                            className="button is-primary is-small submitStep"
                            getDisabled={[Function]}
                            getTitle={[Function]}
                            requiredFields={Array []}
                            type="submit"
              >
                            Suivant
              </SubmitButton>
</td>,
            <td />,
            <td />,
            <td />,
            <td
              className="is-clipped"
>
              <NavLink
                            activeClassName="active"
                            aria-current="page"
                            className="button is-secondary is-small cancel-step"
                            to="/offres/undefined?gestion"
              >
                            Annuler
              </NavLink>
</td>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <SubmitButton
                className="button is-primary is-small submitStep"
                getDisabled={[Function]}
                getTitle={[Function]}
                requiredFields={Array []}
                type="submit"
>
                Suivant
</SubmitButton>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Suivant",
                "className": "button is-primary is-small submitStep",
                "getDisabled": [Function],
                "getTitle": [Function],
                "requiredFields": Array [],
                "type": "submit",
              },
              "ref": null,
              "rendered": "Suivant",
              "type": [Function],
            },
            "type": "td",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "td",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "td",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "td",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NavLink
                activeClassName="active"
                aria-current="page"
                className="button is-secondary is-small cancel-step"
                to="/offres/undefined?gestion"
>
                Annuler
</NavLink>,
              "className": "is-clipped",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "Annuler",
                "className": "button is-secondary is-small cancel-step",
                "to": "/offres/undefined?gestion",
              },
              "ref": null,
              "rendered": "Annuler",
              "type": [Function],
            },
            "type": "td",
          },
        ],
        "type": Symbol(react.fragment),
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "BlockComponent": null,
        "Tag": null,
        "action": "/eventOccurrences/",
        "children": Array [
          <td>
            <Field
                        displayValue={[Function]}
                        errors={null}
                        layout="horizontal"
                        name="offerId"
                        size="normal"
                        storeValue={[Function]}
                        type="hidden"
            />
            <Field
                        displayValue={[Function]}
                        errors={null}
                        layout="horizontal"
                        name="venueId"
                        size="normal"
                        storeValue={[Function]}
                        type="hidden"
            />
            <Field
                        displayValue={[Function]}
                        errors={null}
                        layout="horizontal"
                        minDate={undefined}
                        name="endDatetime"
                        size="normal"
                        storeValue={[Function]}
                        type="hidden"
            />
            <Field
                        debug={true}
                        displayValue={[Function]}
                        errors={null}
                        highlightedDates={Array []}
                        layout="horizontal"
                        minDate="today"
                        name="beginningDate"
                        patchKey="beginningDatetime"
                        readOnly={undefined}
                        required={true}
                        size="normal"
                        storeValue={[Function]}
                        title="Date"
                        type="date"
                        tz={undefined}
            />
</td>,
          <td>
            <Field
                        displayValue={[Function]}
                        errors={null}
                        layout="horizontal"
                        name="beginningTime"
                        patchKey="beginningDatetime"
                        readOnly={undefined}
                        required={true}
                        size="normal"
                        storeValue={[Function]}
                        title="Heure"
                        type="time"
                        tz={undefined}
            />
</td>,
          <td>
            <Field
                        displayValue={[Function]}
                        errors={null}
                        layout="horizontal"
                        name="endTime"
                        patchKey="endDatetime"
                        readOnly={undefined}
                        required={true}
                        size="normal"
                        storeValue={[Function]}
                        title="Heure de fin"
                        type="time"
                        tz={undefined}
            />
</td>,
          <Unknown>
            <td>
                        <SubmitButton
                                    className="button is-primary is-small submitStep"
                                    getDisabled={[Function]}
                                    getTitle={[Function]}
                                    requiredFields={Array []}
                                    type="submit"
                        >
                                    Suivant
                        </SubmitButton>
            </td>
            <td />
            <td />
            <td />
            <td
                        className="is-clipped"
            >
                        <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    className="button is-secondary is-small cancel-step"
                                    to="/offres/undefined?gestion"
                        >
                                    Annuler
                        </NavLink>
            </td>
</Unknown>,
        ],
        "className": null,
        "errorsPatch": Object {},
        "failNotification": "Formulaire non validé",
        "formPatch": Object {},
        "formatPatch": [Function],
        "handleFail": null,
        "handleFailNotification": null,
        "handleFailRedirect": null,
        "handleSuccess": [Function],
        "handleSuccessNotification": null,
        "handleSuccessRedirect": null,
        "layout": "input-only",
        "name": "eventOccurrence",
        "normalizer": null,
        "onEnterKey": null,
        "onEscapeKey": null,
        "onSubmit": null,
        "patch": undefined,
        "readOnly": undefined,
        "size": "small",
        "successNotification": "Formulaire non validé",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Field
                displayValue={[Function]}
                errors={null}
                layout="horizontal"
                name="offerId"
                size="normal"
                storeValue={[Function]}
                type="hidden"
/>,
              <Field
                displayValue={[Function]}
                errors={null}
                layout="horizontal"
                name="venueId"
                size="normal"
                storeValue={[Function]}
                type="hidden"
/>,
              <Field
                displayValue={[Function]}
                errors={null}
                layout="horizontal"
                minDate={undefined}
                name="endDatetime"
                size="normal"
                storeValue={[Function]}
                type="hidden"
/>,
              <Field
                debug={true}
                displayValue={[Function]}
                errors={null}
                highlightedDates={Array []}
                layout="horizontal"
                minDate="today"
                name="beginningDate"
                patchKey="beginningDatetime"
                readOnly={undefined}
                required={true}
                size="normal"
                storeValue={[Function]}
                title="Date"
                type="date"
                tz={undefined}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "displayValue": [Function],
                "errors": null,
                "layout": "horizontal",
                "name": "offerId",
                "size": "normal",
                "storeValue": [Function],
                "type": "hidden",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "displayValue": [Function],
                "errors": null,
                "layout": "horizontal",
                "name": "venueId",
                "size": "normal",
                "storeValue": [Function],
                "type": "hidden",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "displayValue": [Function],
                "errors": null,
                "layout": "horizontal",
                "minDate": undefined,
                "name": "endDatetime",
                "size": "normal",
                "storeValue": [Function],
                "type": "hidden",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "debug": true,
                "displayValue": [Function],
                "errors": null,
                "highlightedDates": Array [],
                "layout": "horizontal",
                "minDate": "today",
                "name": "beginningDate",
                "patchKey": "beginningDatetime",
                "readOnly": undefined,
                "required": true,
                "size": "normal",
                "storeValue": [Function],
                "title": "Date",
                "type": "date",
                "tz": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Field
              displayValue={[Function]}
              errors={null}
              layout="horizontal"
              name="beginningTime"
              patchKey="beginningDatetime"
              readOnly={undefined}
              required={true}
              size="normal"
              storeValue={[Function]}
              title="Heure"
              type="time"
              tz={undefined}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "displayValue": [Function],
              "errors": null,
              "layout": "horizontal",
              "name": "beginningTime",
              "patchKey": "beginningDatetime",
              "readOnly": undefined,
              "required": true,
              "size": "normal",
              "storeValue": [Function],
              "title": "Heure",
              "type": "time",
              "tz": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Field
              displayValue={[Function]}
              errors={null}
              layout="horizontal"
              name="endTime"
              patchKey="endDatetime"
              readOnly={undefined}
              required={true}
              size="normal"
              storeValue={[Function]}
              title="Heure de fin"
              type="time"
              tz={undefined}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "displayValue": [Function],
              "errors": null,
              "layout": "horizontal",
              "name": "endTime",
              "patchKey": "endDatetime",
              "readOnly": undefined,
              "required": true,
              "size": "normal",
              "storeValue": [Function],
              "title": "Heure de fin",
              "type": "time",
              "tz": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <td>
                <SubmitButton
                                className="button is-primary is-small submitStep"
                                getDisabled={[Function]}
                                getTitle={[Function]}
                                requiredFields={Array []}
                                type="submit"
                >
                                Suivant
                </SubmitButton>
</td>,
              <td />,
              <td />,
              <td />,
              <td
                className="is-clipped"
>
                <NavLink
                                activeClassName="active"
                                aria-current="page"
                                className="button is-secondary is-small cancel-step"
                                to="/offres/undefined?gestion"
                >
                                Annuler
                </NavLink>
</td>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <SubmitButton
                  className="button is-primary is-small submitStep"
                  getDisabled={[Function]}
                  getTitle={[Function]}
                  requiredFields={Array []}
                  type="submit"
>
                  Suivant
</SubmitButton>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Suivant",
                  "className": "button is-primary is-small submitStep",
                  "getDisabled": [Function],
                  "getTitle": [Function],
                  "requiredFields": Array [],
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Suivant",
                "type": [Function],
              },
              "type": "td",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "td",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "td",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "td",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="button is-secondary is-small cancel-step"
                  to="/offres/undefined?gestion"
>
                  Annuler
</NavLink>,
                "className": "is-clipped",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": "Annuler",
                  "className": "button is-secondary is-small cancel-step",
                  "to": "/offres/undefined?gestion",
                },
                "ref": null,
                "rendered": "Annuler",
                "type": [Function],
              },
              "type": "td",
            },
          ],
          "type": Symbol(react.fragment),
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
