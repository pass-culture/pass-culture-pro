// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Desk | DeskState  snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DeskState
    booking={
      Object {
        "offerName": "fake offer",
        "userName": "fake user name",
        "venueDepartementCode": "93",
      }
    }
    level="fake level"
    message="fake message"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <table
          className="booking-summary"
        >
          <tbody>
            <tr>
              <th>
                Utilisateur :
              </th>
              <td>
                fake user name
              </td>
            </tr>
            <tr>
              <th>
                Offre :
              </th>
              <td>
                fake offer
              </td>
            </tr>
            <tr>
              <th>
                Date de l’offre :
              </th>
              <td>
                Permanent
              </td>
            </tr>
          </tbody>
        </table>,
        <div
          className="state fake level"
        >
          <span>
            fake message
          </span>
        </div>,
      ],
      "className": "desk-state",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <tbody>
            <tr>
              <th>
                Utilisateur :
              </th>
              <td>
                fake user name
              </td>
            </tr>
            <tr>
              <th>
                Offre :
              </th>
              <td>
                fake offer
              </td>
            </tr>
            <tr>
              <th>
                Date de l’offre :
              </th>
              <td>
                Permanent
              </td>
            </tr>
          </tbody>,
          "className": "booking-summary",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr>
                <th>
                  Utilisateur :
                </th>
                <td>
                  fake user name
                </td>
              </tr>,
              <tr>
                <th>
                  Offre :
                </th>
                <td>
                  fake offer
                </td>
              </tr>,
              <tr>
                <th>
                  Date de l’offre :
                </th>
                <td>
                  Permanent
                </td>
              </tr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Utilisateur :
                  </th>,
                  <td>
                    fake user name
                  </td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Utilisateur :",
                  },
                  "ref": null,
                  "rendered": "Utilisateur :",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "fake user name",
                  },
                  "ref": null,
                  "rendered": "fake user name",
                  "type": "td",
                },
              ],
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Offre :
                  </th>,
                  <td>
                    fake offer
                  </td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Offre :",
                  },
                  "ref": null,
                  "rendered": "Offre :",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "fake offer",
                  },
                  "ref": null,
                  "rendered": "fake offer",
                  "type": "td",
                },
              ],
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th>
                    Date de l’offre :
                  </th>,
                  <td>
                    Permanent
                  </td>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Date de l’offre :",
                  },
                  "ref": null,
                  "rendered": "Date de l’offre :",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Permanent",
                  },
                  "ref": null,
                  "rendered": "Permanent",
                  "type": "td",
                },
              ],
              "type": "tr",
            },
          ],
          "type": "tbody",
        },
        "type": "table",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            false,
            <span>
              fake message
            </span>,
          ],
          "className": "state fake level",
        },
        "ref": null,
        "rendered": Array [
          false,
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "fake message",
            },
            "ref": null,
            "rendered": "fake message",
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <table
            className="booking-summary"
          >
            <tbody>
              <tr>
                <th>
                  Utilisateur :
                </th>
                <td>
                  fake user name
                </td>
              </tr>
              <tr>
                <th>
                  Offre :
                </th>
                <td>
                  fake offer
                </td>
              </tr>
              <tr>
                <th>
                  Date de l’offre :
                </th>
                <td>
                  Permanent
                </td>
              </tr>
            </tbody>
          </table>,
          <div
            className="state fake level"
          >
            <span>
              fake message
            </span>
          </div>,
        ],
        "className": "desk-state",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <tbody>
              <tr>
                <th>
                  Utilisateur :
                </th>
                <td>
                  fake user name
                </td>
              </tr>
              <tr>
                <th>
                  Offre :
                </th>
                <td>
                  fake offer
                </td>
              </tr>
              <tr>
                <th>
                  Date de l’offre :
                </th>
                <td>
                  Permanent
                </td>
              </tr>
            </tbody>,
            "className": "booking-summary",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <tr>
                  <th>
                    Utilisateur :
                  </th>
                  <td>
                    fake user name
                  </td>
                </tr>,
                <tr>
                  <th>
                    Offre :
                  </th>
                  <td>
                    fake offer
                  </td>
                </tr>,
                <tr>
                  <th>
                    Date de l’offre :
                  </th>
                  <td>
                    Permanent
                  </td>
                </tr>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Utilisateur :
                    </th>,
                    <td>
                      fake user name
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Utilisateur :",
                    },
                    "ref": null,
                    "rendered": "Utilisateur :",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "fake user name",
                    },
                    "ref": null,
                    "rendered": "fake user name",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Offre :
                    </th>,
                    <td>
                      fake offer
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Offre :",
                    },
                    "ref": null,
                    "rendered": "Offre :",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "fake offer",
                    },
                    "ref": null,
                    "rendered": "fake offer",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th>
                      Date de l’offre :
                    </th>,
                    <td>
                      Permanent
                    </td>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Date de l’offre :",
                    },
                    "ref": null,
                    "rendered": "Date de l’offre :",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Permanent",
                    },
                    "ref": null,
                    "rendered": "Permanent",
                    "type": "td",
                  },
                ],
                "type": "tr",
              },
            ],
            "type": "tbody",
          },
          "type": "table",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              false,
              <span>
                fake message
              </span>,
            ],
            "className": "state fake level",
          },
          "ref": null,
          "rendered": Array [
            false,
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "fake message",
              },
              "ref": null,
              "rendered": "fake message",
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
