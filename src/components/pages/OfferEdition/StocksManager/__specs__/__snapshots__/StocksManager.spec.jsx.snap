// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components | OfferEdition | StocksManager should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StocksManager
    dispatch={[MockFunction]}
    isEvent={true}
    location={
      Object {
        "hash": "",
        "key": "4c2v7m",
        "pathname": "/offres/AWHA",
        "search": "?gestion",
        "state": undefined,
      }
    }
    query={
      Object {
        "changeToCreation": [MockFunction],
        "context": [Function],
      }
    }
    shouldPreventCreationOfSecondStock={false}
    stocks={
      Array [
        Object {
          "available": 10,
          "bookingLimitDatetime": "2019-03-06T23:00:00Z",
          "bookingRecapSent": null,
          "dateModified": "2019-03-06T15:51:39.253527Z",
          "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
          "eventOccurrenceId": null,
          "groupSize": 1,
          "id": "ARMQ",
          "idAtProviders": null,
          "isSoftDeleted": false,
          "lastProviderId": null,
          "modelName": "Stock",
          "offerId": "AUSQ",
          "price": 17,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="info is-invisible"
        >
          <div
            className="content"
          >
            <div />
          </div>
        </div>,
        null,
        <div
          className="stocks-table-wrapper"
        >
          <HeroSection
            subtitle={null}
            title="Dates, horaires et prix"
          />
          <table
            className="table is-hoverable stocks-table"
          >
            <thead>
              <tr>
                <React.Fragment>
                  <td>
                    Date
                  </td>
                  <td>
                    Heure de
                    <br />
                    début
                  </td>
                  <td>
                    Heure de
                    <br />
                    fin
                  </td>
                </React.Fragment>
                <td>
                  Prix
                </td>
                <td>
                  Date Limite de Réservation
                </td>
                <td>
                  Places affectées
                </td>
                <td>
                  Places restantes
                </td>
                <td>
                  Modifier
                </td>
                <td>
                  Supprimer
                </td>
              </tr>
            </thead>
            <tbody>
              <tr
                className=""
              >
                <td
                  colSpan="10"
                >
                  <button
                    className="button is-secondary"
                    disabled={true}
                    id="add-stock"
                    onClick={[Function]}
                    type="button"
                  >
                    + Ajouter une date
                  </button>
                </td>
              </tr>
            </tbody>
            <withRouter(_withQueryRouter)
              closeInfo={[Function]}
              handleSetErrors={[Function]}
              isEvent={true}
              isFullyEditable={true}
              showInfo={[Function]}
              stock={
                Object {
                  "available": 10,
                  "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                  "bookingRecapSent": null,
                  "dateModified": "2019-03-06T15:51:39.253527Z",
                  "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                  "eventOccurrenceId": null,
                  "groupSize": 1,
                  "id": "ARMQ",
                  "idAtProviders": null,
                  "isSoftDeleted": false,
                  "lastProviderId": null,
                  "modelName": "Stock",
                  "offerId": "AUSQ",
                  "price": 17,
                }
              }
              stocks={
                Array [
                  Object {
                    "available": 10,
                    "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                    "bookingRecapSent": null,
                    "dateModified": "2019-03-06T15:51:39.253527Z",
                    "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                    "eventOccurrenceId": null,
                    "groupSize": 1,
                    "id": "ARMQ",
                    "idAtProviders": null,
                    "isSoftDeleted": false,
                    "lastProviderId": null,
                    "modelName": "Stock",
                    "offerId": "AUSQ",
                    "price": 17,
                  },
                ]
              }
            />
          </table>
        </div>,
        <button
          className="button is-secondary is-pulled-right"
          id="close-manager"
          onClick={[Function]}
          type="button"
        >
          Fermer
        </button>,
      ],
      "className": "stocks-manager",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="content"
          >
            <div />
          </div>,
          "className": "info is-invisible",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div />,
            "className": "content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": null,
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <HeroSection
              subtitle={null}
              title="Dates, horaires et prix"
            />,
            <table
              className="table is-hoverable stocks-table"
            >
              <thead>
                <tr>
                  <React.Fragment>
                    <td>
                      Date
                    </td>
                    <td>
                      Heure de
                      <br />
                      début
                    </td>
                    <td>
                      Heure de
                      <br />
                      fin
                    </td>
                  </React.Fragment>
                  <td>
                    Prix
                  </td>
                  <td>
                    Date Limite de Réservation
                  </td>
                  <td>
                    Places affectées
                  </td>
                  <td>
                    Places restantes
                  </td>
                  <td>
                    Modifier
                  </td>
                  <td>
                    Supprimer
                  </td>
                </tr>
              </thead>
              <tbody>
                <tr
                  className=""
                >
                  <td
                    colSpan="10"
                  >
                    <button
                      className="button is-secondary"
                      disabled={true}
                      id="add-stock"
                      onClick={[Function]}
                      type="button"
                    >
                      + Ajouter une date
                    </button>
                  </td>
                </tr>
              </tbody>
              <withRouter(_withQueryRouter)
                closeInfo={[Function]}
                handleSetErrors={[Function]}
                isEvent={true}
                isFullyEditable={true}
                showInfo={[Function]}
                stock={
                  Object {
                    "available": 10,
                    "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                    "bookingRecapSent": null,
                    "dateModified": "2019-03-06T15:51:39.253527Z",
                    "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                    "eventOccurrenceId": null,
                    "groupSize": 1,
                    "id": "ARMQ",
                    "idAtProviders": null,
                    "isSoftDeleted": false,
                    "lastProviderId": null,
                    "modelName": "Stock",
                    "offerId": "AUSQ",
                    "price": 17,
                  }
                }
                stocks={
                  Array [
                    Object {
                      "available": 10,
                      "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                      "bookingRecapSent": null,
                      "dateModified": "2019-03-06T15:51:39.253527Z",
                      "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                      "eventOccurrenceId": null,
                      "groupSize": 1,
                      "id": "ARMQ",
                      "idAtProviders": null,
                      "isSoftDeleted": false,
                      "lastProviderId": null,
                      "modelName": "Stock",
                      "offerId": "AUSQ",
                      "price": 17,
                    },
                  ]
                }
              />
            </table>,
          ],
          "className": "stocks-table-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": null,
              "subtitle": null,
              "title": "Dates, horaires et prix",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <thead>
                  <tr>
                    <React.Fragment>
                      <td>
                        Date
                      </td>
                      <td>
                        Heure de
                        <br />
                        début
                      </td>
                      <td>
                        Heure de
                        <br />
                        fin
                      </td>
                    </React.Fragment>
                    <td>
                      Prix
                    </td>
                    <td>
                      Date Limite de Réservation
                    </td>
                    <td>
                      Places affectées
                    </td>
                    <td>
                      Places restantes
                    </td>
                    <td>
                      Modifier
                    </td>
                    <td>
                      Supprimer
                    </td>
                  </tr>
                </thead>,
                <tbody>
                  <tr
                    className=""
                  >
                    <td
                      colSpan="10"
                    >
                      <button
                        className="button is-secondary"
                        disabled={true}
                        id="add-stock"
                        onClick={[Function]}
                        type="button"
                      >
                        + Ajouter une date
                      </button>
                    </td>
                  </tr>
                </tbody>,
                undefined,
                Array [
                  <withRouter(_withQueryRouter)
                    closeInfo={[Function]}
                    handleSetErrors={[Function]}
                    isEvent={true}
                    isFullyEditable={true}
                    showInfo={[Function]}
                    stock={
                      Object {
                        "available": 10,
                        "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                        "bookingRecapSent": null,
                        "dateModified": "2019-03-06T15:51:39.253527Z",
                        "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                        "eventOccurrenceId": null,
                        "groupSize": 1,
                        "id": "ARMQ",
                        "idAtProviders": null,
                        "isSoftDeleted": false,
                        "lastProviderId": null,
                        "modelName": "Stock",
                        "offerId": "AUSQ",
                        "price": 17,
                      }
                    }
                    stocks={
                      Array [
                        Object {
                          "available": 10,
                          "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                          "bookingRecapSent": null,
                          "dateModified": "2019-03-06T15:51:39.253527Z",
                          "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                          "eventOccurrenceId": null,
                          "groupSize": 1,
                          "id": "ARMQ",
                          "idAtProviders": null,
                          "isSoftDeleted": false,
                          "lastProviderId": null,
                          "modelName": "Stock",
                          "offerId": "AUSQ",
                          "price": 17,
                        },
                      ]
                    }
                  />,
                ],
                false,
              ],
              "className": "table is-hoverable stocks-table",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <tr>
                    <React.Fragment>
                      <td>
                        Date
                      </td>
                      <td>
                        Heure de
                        <br />
                        début
                      </td>
                      <td>
                        Heure de
                        <br />
                        fin
                      </td>
                    </React.Fragment>
                    <td>
                      Prix
                    </td>
                    <td>
                      Date Limite de Réservation
                    </td>
                    <td>
                      Places affectées
                    </td>
                    <td>
                      Places restantes
                    </td>
                    <td>
                      Modifier
                    </td>
                    <td>
                      Supprimer
                    </td>
                  </tr>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <React.Fragment>
                        <td>
                          Date
                        </td>
                        <td>
                          Heure de
                          <br />
                          début
                        </td>
                        <td>
                          Heure de
                          <br />
                          fin
                        </td>
                      </React.Fragment>,
                      <td>
                        Prix
                      </td>,
                      <td>
                        Date Limite de Réservation
                      </td>,
                      <td>
                        Places affectées
                      </td>,
                      <td>
                        Places restantes
                      </td>,
                      <td>
                        Modifier
                      </td>,
                      <td>
                        Supprimer
                      </td>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <td>
                            Date
                          </td>,
                          <td>
                            Heure de
                            <br />
                            début
                          </td>,
                          <td>
                            Heure de
                            <br />
                            fin
                          </td>,
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Date",
                          },
                          "ref": null,
                          "rendered": "Date",
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              "Heure de",
                              <br />,
                              "début",
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            "Heure de",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": "br",
                            },
                            "début",
                          ],
                          "type": "td",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              "Heure de",
                              <br />,
                              "fin",
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            "Heure de",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {},
                              "ref": null,
                              "rendered": null,
                              "type": "br",
                            },
                            "fin",
                          ],
                          "type": "td",
                        },
                      ],
                      "type": Symbol(react.fragment),
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Prix",
                      },
                      "ref": null,
                      "rendered": "Prix",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Date Limite de Réservation",
                      },
                      "ref": null,
                      "rendered": "Date Limite de Réservation",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Places affectées",
                      },
                      "ref": null,
                      "rendered": "Places affectées",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Places restantes",
                      },
                      "ref": null,
                      "rendered": "Places restantes",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Modifier",
                      },
                      "ref": null,
                      "rendered": "Modifier",
                      "type": "td",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Supprimer",
                      },
                      "ref": null,
                      "rendered": "Supprimer",
                      "type": "td",
                    },
                  ],
                  "type": "tr",
                },
                "type": "thead",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <tr
                    className=""
                  >
                    <td
                      colSpan="10"
                    >
                      <button
                        className="button is-secondary"
                        disabled={true}
                        id="add-stock"
                        onClick={[Function]}
                        type="button"
                      >
                        + Ajouter une date
                      </button>
                    </td>
                  </tr>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <td
                      colSpan="10"
                    >
                      <button
                        className="button is-secondary"
                        disabled={true}
                        id="add-stock"
                        onClick={[Function]}
                        type="button"
                      >
                        + Ajouter une date
                      </button>
                    </td>,
                    "className": "",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <button
                        className="button is-secondary"
                        disabled={true}
                        id="add-stock"
                        onClick={[Function]}
                        type="button"
                      >
                        + Ajouter une date
                      </button>,
                      "colSpan": "10",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "+ Ajouter une date",
                        "className": "button is-secondary",
                        "disabled": true,
                        "id": "add-stock",
                        "onClick": [Function],
                        "type": "button",
                      },
                      "ref": null,
                      "rendered": "+ Ajouter une date",
                      "type": "button",
                    },
                    "type": "td",
                  },
                  "type": "tr",
                },
                "type": "tbody",
              },
              undefined,
              Object {
                "instance": null,
                "key": "ARMQ",
                "nodeType": "function",
                "props": Object {
                  "closeInfo": [Function],
                  "handleSetErrors": [Function],
                  "isEvent": true,
                  "isFullyEditable": true,
                  "showInfo": [Function],
                  "stock": Object {
                    "available": 10,
                    "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                    "bookingRecapSent": null,
                    "dateModified": "2019-03-06T15:51:39.253527Z",
                    "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                    "eventOccurrenceId": null,
                    "groupSize": 1,
                    "id": "ARMQ",
                    "idAtProviders": null,
                    "isSoftDeleted": false,
                    "lastProviderId": null,
                    "modelName": "Stock",
                    "offerId": "AUSQ",
                    "price": 17,
                  },
                  "stocks": Array [
                    Object {
                      "available": 10,
                      "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                      "bookingRecapSent": null,
                      "dateModified": "2019-03-06T15:51:39.253527Z",
                      "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                      "eventOccurrenceId": null,
                      "groupSize": 1,
                      "id": "ARMQ",
                      "idAtProviders": null,
                      "isSoftDeleted": false,
                      "lastProviderId": null,
                      "modelName": "Stock",
                      "offerId": "AUSQ",
                      "price": 17,
                    },
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              false,
            ],
            "type": "table",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Fermer",
          "className": "button is-secondary is-pulled-right",
          "id": "close-manager",
          "onClick": [Function],
          "type": "button",
        },
        "ref": null,
        "rendered": "Fermer",
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="info is-invisible"
          >
            <div
              className="content"
            >
              <div />
            </div>
          </div>,
          null,
          <div
            className="stocks-table-wrapper"
          >
            <HeroSection
              subtitle={null}
              title="Dates, horaires et prix"
            />
            <table
              className="table is-hoverable stocks-table"
            >
              <thead>
                <tr>
                  <React.Fragment>
                    <td>
                      Date
                    </td>
                    <td>
                      Heure de
                      <br />
                      début
                    </td>
                    <td>
                      Heure de
                      <br />
                      fin
                    </td>
                  </React.Fragment>
                  <td>
                    Prix
                  </td>
                  <td>
                    Date Limite de Réservation
                  </td>
                  <td>
                    Places affectées
                  </td>
                  <td>
                    Places restantes
                  </td>
                  <td>
                    Modifier
                  </td>
                  <td>
                    Supprimer
                  </td>
                </tr>
              </thead>
              <tbody>
                <tr
                  className=""
                >
                  <td
                    colSpan="10"
                  >
                    <button
                      className="button is-secondary"
                      disabled={true}
                      id="add-stock"
                      onClick={[Function]}
                      type="button"
                    >
                      + Ajouter une date
                    </button>
                  </td>
                </tr>
              </tbody>
              <withRouter(_withQueryRouter)
                closeInfo={[Function]}
                handleSetErrors={[Function]}
                isEvent={true}
                isFullyEditable={true}
                showInfo={[Function]}
                stock={
                  Object {
                    "available": 10,
                    "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                    "bookingRecapSent": null,
                    "dateModified": "2019-03-06T15:51:39.253527Z",
                    "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                    "eventOccurrenceId": null,
                    "groupSize": 1,
                    "id": "ARMQ",
                    "idAtProviders": null,
                    "isSoftDeleted": false,
                    "lastProviderId": null,
                    "modelName": "Stock",
                    "offerId": "AUSQ",
                    "price": 17,
                  }
                }
                stocks={
                  Array [
                    Object {
                      "available": 10,
                      "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                      "bookingRecapSent": null,
                      "dateModified": "2019-03-06T15:51:39.253527Z",
                      "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                      "eventOccurrenceId": null,
                      "groupSize": 1,
                      "id": "ARMQ",
                      "idAtProviders": null,
                      "isSoftDeleted": false,
                      "lastProviderId": null,
                      "modelName": "Stock",
                      "offerId": "AUSQ",
                      "price": 17,
                    },
                  ]
                }
              />
            </table>
          </div>,
          <button
            className="button is-secondary is-pulled-right"
            id="close-manager"
            onClick={[Function]}
            type="button"
          >
            Fermer
          </button>,
        ],
        "className": "stocks-manager",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="content"
            >
              <div />
            </div>,
            "className": "info is-invisible",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div />,
              "className": "content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <HeroSection
                subtitle={null}
                title="Dates, horaires et prix"
              />,
              <table
                className="table is-hoverable stocks-table"
              >
                <thead>
                  <tr>
                    <React.Fragment>
                      <td>
                        Date
                      </td>
                      <td>
                        Heure de
                        <br />
                        début
                      </td>
                      <td>
                        Heure de
                        <br />
                        fin
                      </td>
                    </React.Fragment>
                    <td>
                      Prix
                    </td>
                    <td>
                      Date Limite de Réservation
                    </td>
                    <td>
                      Places affectées
                    </td>
                    <td>
                      Places restantes
                    </td>
                    <td>
                      Modifier
                    </td>
                    <td>
                      Supprimer
                    </td>
                  </tr>
                </thead>
                <tbody>
                  <tr
                    className=""
                  >
                    <td
                      colSpan="10"
                    >
                      <button
                        className="button is-secondary"
                        disabled={true}
                        id="add-stock"
                        onClick={[Function]}
                        type="button"
                      >
                        + Ajouter une date
                      </button>
                    </td>
                  </tr>
                </tbody>
                <withRouter(_withQueryRouter)
                  closeInfo={[Function]}
                  handleSetErrors={[Function]}
                  isEvent={true}
                  isFullyEditable={true}
                  showInfo={[Function]}
                  stock={
                    Object {
                      "available": 10,
                      "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                      "bookingRecapSent": null,
                      "dateModified": "2019-03-06T15:51:39.253527Z",
                      "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                      "eventOccurrenceId": null,
                      "groupSize": 1,
                      "id": "ARMQ",
                      "idAtProviders": null,
                      "isSoftDeleted": false,
                      "lastProviderId": null,
                      "modelName": "Stock",
                      "offerId": "AUSQ",
                      "price": 17,
                    }
                  }
                  stocks={
                    Array [
                      Object {
                        "available": 10,
                        "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                        "bookingRecapSent": null,
                        "dateModified": "2019-03-06T15:51:39.253527Z",
                        "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                        "eventOccurrenceId": null,
                        "groupSize": 1,
                        "id": "ARMQ",
                        "idAtProviders": null,
                        "isSoftDeleted": false,
                        "lastProviderId": null,
                        "modelName": "Stock",
                        "offerId": "AUSQ",
                        "price": 17,
                      },
                    ]
                  }
                />
              </table>,
            ],
            "className": "stocks-table-wrapper",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": null,
                "subtitle": null,
                "title": "Dates, horaires et prix",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <thead>
                    <tr>
                      <React.Fragment>
                        <td>
                          Date
                        </td>
                        <td>
                          Heure de
                          <br />
                          début
                        </td>
                        <td>
                          Heure de
                          <br />
                          fin
                        </td>
                      </React.Fragment>
                      <td>
                        Prix
                      </td>
                      <td>
                        Date Limite de Réservation
                      </td>
                      <td>
                        Places affectées
                      </td>
                      <td>
                        Places restantes
                      </td>
                      <td>
                        Modifier
                      </td>
                      <td>
                        Supprimer
                      </td>
                    </tr>
                  </thead>,
                  <tbody>
                    <tr
                      className=""
                    >
                      <td
                        colSpan="10"
                      >
                        <button
                          className="button is-secondary"
                          disabled={true}
                          id="add-stock"
                          onClick={[Function]}
                          type="button"
                        >
                          + Ajouter une date
                        </button>
                      </td>
                    </tr>
                  </tbody>,
                  undefined,
                  Array [
                    <withRouter(_withQueryRouter)
                      closeInfo={[Function]}
                      handleSetErrors={[Function]}
                      isEvent={true}
                      isFullyEditable={true}
                      showInfo={[Function]}
                      stock={
                        Object {
                          "available": 10,
                          "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                          "bookingRecapSent": null,
                          "dateModified": "2019-03-06T15:51:39.253527Z",
                          "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                          "eventOccurrenceId": null,
                          "groupSize": 1,
                          "id": "ARMQ",
                          "idAtProviders": null,
                          "isSoftDeleted": false,
                          "lastProviderId": null,
                          "modelName": "Stock",
                          "offerId": "AUSQ",
                          "price": 17,
                        }
                      }
                      stocks={
                        Array [
                          Object {
                            "available": 10,
                            "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                            "bookingRecapSent": null,
                            "dateModified": "2019-03-06T15:51:39.253527Z",
                            "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                            "eventOccurrenceId": null,
                            "groupSize": 1,
                            "id": "ARMQ",
                            "idAtProviders": null,
                            "isSoftDeleted": false,
                            "lastProviderId": null,
                            "modelName": "Stock",
                            "offerId": "AUSQ",
                            "price": 17,
                          },
                        ]
                      }
                    />,
                  ],
                  false,
                ],
                "className": "table is-hoverable stocks-table",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr>
                      <React.Fragment>
                        <td>
                          Date
                        </td>
                        <td>
                          Heure de
                          <br />
                          début
                        </td>
                        <td>
                          Heure de
                          <br />
                          fin
                        </td>
                      </React.Fragment>
                      <td>
                        Prix
                      </td>
                      <td>
                        Date Limite de Réservation
                      </td>
                      <td>
                        Places affectées
                      </td>
                      <td>
                        Places restantes
                      </td>
                      <td>
                        Modifier
                      </td>
                      <td>
                        Supprimer
                      </td>
                    </tr>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <React.Fragment>
                          <td>
                            Date
                          </td>
                          <td>
                            Heure de
                            <br />
                            début
                          </td>
                          <td>
                            Heure de
                            <br />
                            fin
                          </td>
                        </React.Fragment>,
                        <td>
                          Prix
                        </td>,
                        <td>
                          Date Limite de Réservation
                        </td>,
                        <td>
                          Places affectées
                        </td>,
                        <td>
                          Places restantes
                        </td>,
                        <td>
                          Modifier
                        </td>,
                        <td>
                          Supprimer
                        </td>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "children": Array [
                            <td>
                              Date
                            </td>,
                            <td>
                              Heure de
                              <br />
                              début
                            </td>,
                            <td>
                              Heure de
                              <br />
                              fin
                            </td>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Date",
                            },
                            "ref": null,
                            "rendered": "Date",
                            "type": "td",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "Heure de",
                                <br />,
                                "début",
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              "Heure de",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {},
                                "ref": null,
                                "rendered": null,
                                "type": "br",
                              },
                              "début",
                            ],
                            "type": "td",
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": Array [
                                "Heure de",
                                <br />,
                                "fin",
                              ],
                            },
                            "ref": null,
                            "rendered": Array [
                              "Heure de",
                              Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {},
                                "ref": null,
                                "rendered": null,
                                "type": "br",
                              },
                              "fin",
                            ],
                            "type": "td",
                          },
                        ],
                        "type": Symbol(react.fragment),
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Prix",
                        },
                        "ref": null,
                        "rendered": "Prix",
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Date Limite de Réservation",
                        },
                        "ref": null,
                        "rendered": "Date Limite de Réservation",
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Places affectées",
                        },
                        "ref": null,
                        "rendered": "Places affectées",
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Places restantes",
                        },
                        "ref": null,
                        "rendered": "Places restantes",
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Modifier",
                        },
                        "ref": null,
                        "rendered": "Modifier",
                        "type": "td",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Supprimer",
                        },
                        "ref": null,
                        "rendered": "Supprimer",
                        "type": "td",
                      },
                    ],
                    "type": "tr",
                  },
                  "type": "thead",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <tr
                      className=""
                    >
                      <td
                        colSpan="10"
                      >
                        <button
                          className="button is-secondary"
                          disabled={true}
                          id="add-stock"
                          onClick={[Function]}
                          type="button"
                        >
                          + Ajouter une date
                        </button>
                      </td>
                    </tr>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <td
                        colSpan="10"
                      >
                        <button
                          className="button is-secondary"
                          disabled={true}
                          id="add-stock"
                          onClick={[Function]}
                          type="button"
                        >
                          + Ajouter une date
                        </button>
                      </td>,
                      "className": "",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <button
                          className="button is-secondary"
                          disabled={true}
                          id="add-stock"
                          onClick={[Function]}
                          type="button"
                        >
                          + Ajouter une date
                        </button>,
                        "colSpan": "10",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "+ Ajouter une date",
                          "className": "button is-secondary",
                          "disabled": true,
                          "id": "add-stock",
                          "onClick": [Function],
                          "type": "button",
                        },
                        "ref": null,
                        "rendered": "+ Ajouter une date",
                        "type": "button",
                      },
                      "type": "td",
                    },
                    "type": "tr",
                  },
                  "type": "tbody",
                },
                undefined,
                Object {
                  "instance": null,
                  "key": "ARMQ",
                  "nodeType": "function",
                  "props": Object {
                    "closeInfo": [Function],
                    "handleSetErrors": [Function],
                    "isEvent": true,
                    "isFullyEditable": true,
                    "showInfo": [Function],
                    "stock": Object {
                      "available": 10,
                      "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                      "bookingRecapSent": null,
                      "dateModified": "2019-03-06T15:51:39.253527Z",
                      "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                      "eventOccurrenceId": null,
                      "groupSize": 1,
                      "id": "ARMQ",
                      "idAtProviders": null,
                      "isSoftDeleted": false,
                      "lastProviderId": null,
                      "modelName": "Stock",
                      "offerId": "AUSQ",
                      "price": 17,
                    },
                    "stocks": Array [
                      Object {
                        "available": 10,
                        "bookingLimitDatetime": "2019-03-06T23:00:00Z",
                        "bookingRecapSent": null,
                        "dateModified": "2019-03-06T15:51:39.253527Z",
                        "dateModifiedAtLastProvider": "2019-03-06T15:51:39.253504Z",
                        "eventOccurrenceId": null,
                        "groupSize": 1,
                        "id": "ARMQ",
                        "idAtProviders": null,
                        "isSoftDeleted": false,
                        "lastProviderId": null,
                        "modelName": "Stock",
                        "offerId": "AUSQ",
                        "price": 17,
                      },
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                false,
              ],
              "type": "table",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Fermer",
            "className": "button is-secondary is-pulled-right",
            "id": "close-manager",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "Fermer",
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
