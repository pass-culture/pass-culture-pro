// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components | OfferEdition | MediationItem should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MediationItem
    mediation={
      Object {
        "id": "AE",
        "isActive": true,
        "thumbUrl": "http://example.com/image.jpg",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "BlockComponent": null,
      "Tag": "li",
      "action": "/mediations/AE",
      "children": Array [
        <img
          alt="accroche-AE"
          disabled={false}
          src="http://example.com/image.jpg"
        />,
        <br />,
        <br />,
        <div
          className="columns is-centered"
        >
          <Field
            displayValue={[Function]}
            errors={null}
            layout="horizontal"
            name="isActive"
            size="normal"
            storeValue={[Function]}
            type="checkbox"
          />
        </div>,
      ],
      "className": null,
      "errorsPatch": Object {},
      "failNotification": "Formulaire non validé",
      "formPatch": Object {},
      "formatPatch": [Function],
      "handleFail": null,
      "handleFailNotification": null,
      "handleFailRedirect": null,
      "handleSuccess": null,
      "handleSuccessNotification": null,
      "handleSuccessRedirect": null,
      "isAutoSubmit": true,
      "name": "mediation-AE",
      "normalizer": null,
      "onEnterKey": null,
      "onEscapeKey": null,
      "onSubmit": null,
      "patch": Object {
        "id": "AE",
        "isActive": true,
        "thumbUrl": "http://example.com/image.jpg",
      },
      "successNotification": "Formulaire non validé",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "accroche-AE",
          "disabled": false,
          "src": "http://example.com/image.jpg",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Field
            displayValue={[Function]}
            errors={null}
            layout="horizontal"
            name="isActive"
            size="normal"
            storeValue={[Function]}
            type="checkbox"
          />,
          "className": "columns is-centered",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "displayValue": [Function],
            "errors": null,
            "layout": "horizontal",
            "name": "isActive",
            "size": "normal",
            "storeValue": [Function],
            "type": "checkbox",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "BlockComponent": null,
        "Tag": "li",
        "action": "/mediations/AE",
        "children": Array [
          <img
            alt="accroche-AE"
            disabled={false}
            src="http://example.com/image.jpg"
          />,
          <br />,
          <br />,
          <div
            className="columns is-centered"
          >
            <Field
              displayValue={[Function]}
              errors={null}
              layout="horizontal"
              name="isActive"
              size="normal"
              storeValue={[Function]}
              type="checkbox"
            />
          </div>,
        ],
        "className": null,
        "errorsPatch": Object {},
        "failNotification": "Formulaire non validé",
        "formPatch": Object {},
        "formatPatch": [Function],
        "handleFail": null,
        "handleFailNotification": null,
        "handleFailRedirect": null,
        "handleSuccess": null,
        "handleSuccessNotification": null,
        "handleSuccessRedirect": null,
        "isAutoSubmit": true,
        "name": "mediation-AE",
        "normalizer": null,
        "onEnterKey": null,
        "onEscapeKey": null,
        "onSubmit": null,
        "patch": Object {
          "id": "AE",
          "isActive": true,
          "thumbUrl": "http://example.com/image.jpg",
        },
        "successNotification": "Formulaire non validé",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "accroche-AE",
            "disabled": false,
            "src": "http://example.com/image.jpg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Field
              displayValue={[Function]}
              errors={null}
              layout="horizontal"
              name="isActive"
              size="normal"
              storeValue={[Function]}
              type="checkbox"
            />,
            "className": "columns is-centered",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "displayValue": [Function],
              "errors": null,
              "layout": "horizontal",
              "name": "isActive",
              "size": "normal",
              "storeValue": [Function],
              "type": "checkbox",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
