// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offerer | VenueItem snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VenueItem
    venue={
        Object {
            "id": "AAA",
            "managingOffererId": "ABC",
            "name": "fake name",
            "publicName": null,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="picto"
>
          <Icon
                    svg="ico-venue"
          />
</div>,
        <div
          className="list-content"
>
          <p
                    className="name"
          >
                    <NavLink
                              activeClassName="active"
                              aria-current="page"
                              id="a-fake-name"
                              to="/structures/ABC/lieux/AAA"
                    >
                              fake name
                    </NavLink>
          </p>
          <ul
                    className="actions"
          >
                    <li>
                              <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="has-text-primary"
                                        to="/offres/creation?lieu=AAA"
                              >
                                        <Icon
                                                  svg="ico-offres-r"
                                        />
                                         Créer une offre
                              </NavLink>
                    </li>
                    <li>
                              0 offre
                    </li>
                    <li>
                              <Dotdotdot
                                        clamp={2}
                                        className="has-text-grey"
                                        tagName="div"
                                        truncationChar="…"
                                        useNativeClamp={true}
                              >
                                         
                                         
                              </Dotdotdot>
                    </li>
          </ul>
</div>,
        <div
          className="caret"
>
          <NavLink
                    activeClassName="active"
                    aria-current="page"
                    to="/structures/ABC/lieux/AAA"
          >
                    <Icon
                              svg="ico-next-S"
                    />
          </NavLink>
</div>,
      ],
      "className": "venue-item",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            svg="ico-venue"
/>,
          "className": "picto",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "svg": "ico-venue",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="name"
>
              <NavLink
                            activeClassName="active"
                            aria-current="page"
                            id="a-fake-name"
                            to="/structures/ABC/lieux/AAA"
              >
                            fake name
              </NavLink>
</p>,
            <ul
              className="actions"
>
              <li>
                            <NavLink
                                          activeClassName="active"
                                          aria-current="page"
                                          className="has-text-primary"
                                          to="/offres/creation?lieu=AAA"
                            >
                                          <Icon
                                                        svg="ico-offres-r"
                                          />
                                           Créer une offre
                            </NavLink>
              </li>
              <li>
                            0 offre
              </li>
              <li>
                            <Dotdotdot
                                          clamp={2}
                                          className="has-text-grey"
                                          tagName="div"
                                          truncationChar="…"
                                          useNativeClamp={true}
                            >
                                           
                                           
                            </Dotdotdot>
              </li>
</ul>,
          ],
          "className": "list-content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NavLink
                activeClassName="active"
                aria-current="page"
                id="a-fake-name"
                to="/structures/ABC/lieux/AAA"
>
                fake name
</NavLink>,
              "className": "name",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "fake name",
                "id": "a-fake-name",
                "to": "/structures/ABC/lieux/AAA",
              },
              "ref": null,
              "rendered": "fake name",
              "type": [Function],
            },
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <li>
                  <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    className="has-text-primary"
                                    to="/offres/creation?lieu=AAA"
                  >
                                    <Icon
                                                      svg="ico-offres-r"
                                    />
                                     Créer une offre
                  </NavLink>
</li>,
                <li>
                  0 offre
</li>,
                <li>
                  <Dotdotdot
                                    clamp={2}
                                    className="has-text-grey"
                                    tagName="div"
                                    truncationChar="…"
                                    useNativeClamp={true}
                  >
                                     
                                     
                  </Dotdotdot>
</li>,
              ],
              "className": "actions",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="has-text-primary"
                    to="/offres/creation?lieu=AAA"
>
                    <Icon
                                        svg="ico-offres-r"
                    />
                     Créer une offre
</NavLink>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "aria-current": "page",
                    "children": Array [
                      <Icon
                        svg="ico-offres-r"
/>,
                      " Créer une offre",
                    ],
                    "className": "has-text-primary",
                    "to": "/offres/creation?lieu=AAA",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "svg": "ico-offres-r",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " Créer une offre",
                  ],
                  "type": [Function],
                },
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0 offre",
                },
                "ref": null,
                "rendered": "0 offre",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Dotdotdot
                    clamp={2}
                    className="has-text-grey"
                    tagName="div"
                    truncationChar="…"
                    useNativeClamp={true}
>
                     
                     
</Dotdotdot>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      undefined,
                      " ",
                      undefined,
                      " ",
                      undefined,
                    ],
                    "clamp": 2,
                    "className": "has-text-grey",
                    "tagName": "div",
                    "truncationChar": "…",
                    "useNativeClamp": true,
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                    " ",
                    undefined,
                    " ",
                    undefined,
                  ],
                  "type": [Function],
                },
                "type": "li",
              },
            ],
            "type": "ul",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <NavLink
            activeClassName="active"
            aria-current="page"
            to="/structures/ABC/lieux/AAA"
>
            <Icon
                        svg="ico-next-S"
            />
</NavLink>,
          "className": "caret",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": <Icon
              svg="ico-next-S"
/>,
            "to": "/structures/ABC/lieux/AAA",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "svg": "ico-next-S",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="picto"
>
            <Icon
                        svg="ico-venue"
            />
</div>,
          <div
            className="list-content"
>
            <p
                        className="name"
            >
                        <NavLink
                                    activeClassName="active"
                                    aria-current="page"
                                    id="a-fake-name"
                                    to="/structures/ABC/lieux/AAA"
                        >
                                    fake name
                        </NavLink>
            </p>
            <ul
                        className="actions"
            >
                        <li>
                                    <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                className="has-text-primary"
                                                to="/offres/creation?lieu=AAA"
                                    >
                                                <Icon
                                                            svg="ico-offres-r"
                                                />
                                                 Créer une offre
                                    </NavLink>
                        </li>
                        <li>
                                    0 offre
                        </li>
                        <li>
                                    <Dotdotdot
                                                clamp={2}
                                                className="has-text-grey"
                                                tagName="div"
                                                truncationChar="…"
                                                useNativeClamp={true}
                                    >
                                                 
                                                 
                                    </Dotdotdot>
                        </li>
            </ul>
</div>,
          <div
            className="caret"
>
            <NavLink
                        activeClassName="active"
                        aria-current="page"
                        to="/structures/ABC/lieux/AAA"
            >
                        <Icon
                                    svg="ico-next-S"
                        />
            </NavLink>
</div>,
        ],
        "className": "venue-item",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              svg="ico-venue"
/>,
            "className": "picto",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "svg": "ico-venue",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="name"
>
                <NavLink
                                activeClassName="active"
                                aria-current="page"
                                id="a-fake-name"
                                to="/structures/ABC/lieux/AAA"
                >
                                fake name
                </NavLink>
</p>,
              <ul
                className="actions"
>
                <li>
                                <NavLink
                                                activeClassName="active"
                                                aria-current="page"
                                                className="has-text-primary"
                                                to="/offres/creation?lieu=AAA"
                                >
                                                <Icon
                                                                svg="ico-offres-r"
                                                />
                                                 Créer une offre
                                </NavLink>
                </li>
                <li>
                                0 offre
                </li>
                <li>
                                <Dotdotdot
                                                clamp={2}
                                                className="has-text-grey"
                                                tagName="div"
                                                truncationChar="…"
                                                useNativeClamp={true}
                                >
                                                 
                                                 
                                </Dotdotdot>
                </li>
</ul>,
            ],
            "className": "list-content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <NavLink
                  activeClassName="active"
                  aria-current="page"
                  id="a-fake-name"
                  to="/structures/ABC/lieux/AAA"
>
                  fake name
</NavLink>,
                "className": "name",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": "fake name",
                  "id": "a-fake-name",
                  "to": "/structures/ABC/lieux/AAA",
                },
                "ref": null,
                "rendered": "fake name",
                "type": [Function],
              },
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <li>
                    <NavLink
                                        activeClassName="active"
                                        aria-current="page"
                                        className="has-text-primary"
                                        to="/offres/creation?lieu=AAA"
                    >
                                        <Icon
                                                            svg="ico-offres-r"
                                        />
                                         Créer une offre
                    </NavLink>
</li>,
                  <li>
                    0 offre
</li>,
                  <li>
                    <Dotdotdot
                                        clamp={2}
                                        className="has-text-grey"
                                        tagName="div"
                                        truncationChar="…"
                                        useNativeClamp={true}
                    >
                                         
                                         
                    </Dotdotdot>
</li>,
                ],
                "className": "actions",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      aria-current="page"
                      className="has-text-primary"
                      to="/offres/creation?lieu=AAA"
>
                      <Icon
                                            svg="ico-offres-r"
                      />
                       Créer une offre
</NavLink>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "aria-current": "page",
                      "children": Array [
                        <Icon
                          svg="ico-offres-r"
/>,
                        " Créer une offre",
                      ],
                      "className": "has-text-primary",
                      "to": "/offres/creation?lieu=AAA",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "svg": "ico-offres-r",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " Créer une offre",
                    ],
                    "type": [Function],
                  },
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0 offre",
                  },
                  "ref": null,
                  "rendered": "0 offre",
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Dotdotdot
                      clamp={2}
                      className="has-text-grey"
                      tagName="div"
                      truncationChar="…"
                      useNativeClamp={true}
>
                       
                       
</Dotdotdot>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        undefined,
                        " ",
                        undefined,
                        " ",
                        undefined,
                      ],
                      "clamp": 2,
                      "className": "has-text-grey",
                      "tagName": "div",
                      "truncationChar": "…",
                      "useNativeClamp": true,
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                      " ",
                      undefined,
                      " ",
                      undefined,
                    ],
                    "type": [Function],
                  },
                  "type": "li",
                },
              ],
              "type": "ul",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavLink
              activeClassName="active"
              aria-current="page"
              to="/structures/ABC/lieux/AAA"
>
              <Icon
                            svg="ico-next-S"
              />
</NavLink>,
            "className": "caret",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": <Icon
                svg="ico-next-S"
/>,
              "to": "/structures/ABC/lieux/AAA",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "svg": "ico-next-S",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
