// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offerer | ModificationControl  should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModificationControl
    adminUserOfferer={false}
    offerer={
      Object {
        "id": "TgJ764rtd",
      }
    }
    parseFormChild={[Function]}
    query={
      Object {
        "context": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Object {
                "readOnly": true,
              },
            },
          ],
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": ".0",
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="control"
        />,
        <br />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": ".0",
        "nodeType": "host",
        "props": Object {
          "children": false,
          "className": "control",
        },
        "ref": null,
        "rendered": false,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": ".1",
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": ".0",
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="control"
          />,
          <br />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": ".0",
          "nodeType": "host",
          "props": Object {
            "children": false,
            "className": "control",
          },
          "ref": null,
          "rendered": false,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": ".1",
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
