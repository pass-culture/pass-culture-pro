// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Venue | fields | LocationViewer should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LocationViewer
    debounceTimeout={300}
    defaultInitialPosition={
      Object {
        "latitude": 46.98025235521883,
        "longitude": 1.9335937500000002,
        "zoom": 5,
      }
    }
    maxSuggestions={5}
    name={null}
    onMarkerDragend={[Function]}
    onSuggestionSelect={[Function]}
    onTextChange={[Function]}
    placeholder="Sélectionnez l’adresse lorsqu’elle est proposée."
    readOnly={true}
    withMap={false}
    zoom={15}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "className": undefined,
      "name": null,
      "readOnly": true,
      "value": "",
    },
    "ref": null,
    "rendered": null,
    "type": "input",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "className": undefined,
        "name": null,
        "readOnly": true,
        "value": "",
      },
      "ref": null,
      "rendered": null,
      "type": "input",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
