// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Venue | fields | LocationViewer snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LocationViewer
    debounceTimeout={300}
    defaultInitialPosition={
      Object {
        "latitude": 46.98025235521883,
        "longitude": 1.9335937500000002,
        "zoom": 5,
      }
    }
    latitude={null}
    longitude={null}
    maxSuggestions={5}
    name={null}
    onMarkerDragend={[Function]}
    onSuggestionSelect={[Function]}
    onTextChange={[Function]}
    placeholder="Sélectionnez l'adresse lorsqu'elle est proposée."
    withMap={false}
    zoom={15}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Autocomplete
          autoHighlight={true}
          autocomplete="street-address"
          getItemValue={[Function]}
          inputProps={
            Object {
              "className": "input",
              "id": undefined,
              "name": null,
              "placeholder": "Sélectionnez l'adresse lorsqu'elle est proposée.",
              "readOnly": undefined,
              "required": undefined,
            }
          }
          isItemSelectable={[Function]}
          items={Array []}
          menuStyle={
            Object {
              "background": "rgba(255, 255, 255, 0.9)",
              "borderRadius": "3px",
              "boxShadow": "0 2px 12px rgba(0, 0, 0, 0.1)",
              "fontSize": "90%",
              "maxHeight": "50%",
              "overflow": "auto",
              "padding": "2px 0",
              "position": "fixed",
            }
          }
          onChange={[Function]}
          onMenuVisibilityChange={[Function]}
          onSelect={[Function]}
          renderInput={[Function]}
          renderItem={[Function]}
          renderMenu={[Function]}
          selectOnBlur={false}
          value=""
          wrapperProps={
            Object {
              "className": "input-wrapper",
            }
          }
          wrapperStyle={
            Object {
              "display": "inline-block",
            }
          }
        />,
        <button
          className="button is-loading is-invisible"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "autoHighlight": true,
          "autocomplete": "street-address",
          "getItemValue": [Function],
          "inputProps": Object {
            "className": "input",
            "id": undefined,
            "name": null,
            "placeholder": "Sélectionnez l'adresse lorsqu'elle est proposée.",
            "readOnly": undefined,
            "required": undefined,
          },
          "isItemSelectable": [Function],
          "items": Array [],
          "menuStyle": Object {
            "background": "rgba(255, 255, 255, 0.9)",
            "borderRadius": "3px",
            "boxShadow": "0 2px 12px rgba(0, 0, 0, 0.1)",
            "fontSize": "90%",
            "maxHeight": "50%",
            "overflow": "auto",
            "padding": "2px 0",
            "position": "fixed",
          },
          "onChange": [Function],
          "onMenuVisibilityChange": [Function],
          "onSelect": [Function],
          "readOnly": undefined,
          "renderInput": [Function],
          "renderItem": [Function],
          "renderMenu": [Function],
          "selectOnBlur": false,
          "value": "",
          "wrapperProps": Object {
            "className": "input-wrapper",
          },
          "wrapperStyle": Object {
            "display": "inline-block",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "button is-loading is-invisible",
        },
        "ref": null,
        "rendered": null,
        "type": "button",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Autocomplete
            autoHighlight={true}
            autocomplete="street-address"
            getItemValue={[Function]}
            inputProps={
              Object {
                "className": "input",
                "id": undefined,
                "name": null,
                "placeholder": "Sélectionnez l'adresse lorsqu'elle est proposée.",
                "readOnly": undefined,
                "required": undefined,
              }
            }
            isItemSelectable={[Function]}
            items={Array []}
            menuStyle={
              Object {
                "background": "rgba(255, 255, 255, 0.9)",
                "borderRadius": "3px",
                "boxShadow": "0 2px 12px rgba(0, 0, 0, 0.1)",
                "fontSize": "90%",
                "maxHeight": "50%",
                "overflow": "auto",
                "padding": "2px 0",
                "position": "fixed",
              }
            }
            onChange={[Function]}
            onMenuVisibilityChange={[Function]}
            onSelect={[Function]}
            renderInput={[Function]}
            renderItem={[Function]}
            renderMenu={[Function]}
            selectOnBlur={false}
            value=""
            wrapperProps={
              Object {
                "className": "input-wrapper",
              }
            }
            wrapperStyle={
              Object {
                "display": "inline-block",
              }
            }
          />,
          <button
            className="button is-loading is-invisible"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autoHighlight": true,
            "autocomplete": "street-address",
            "getItemValue": [Function],
            "inputProps": Object {
              "className": "input",
              "id": undefined,
              "name": null,
              "placeholder": "Sélectionnez l'adresse lorsqu'elle est proposée.",
              "readOnly": undefined,
              "required": undefined,
            },
            "isItemSelectable": [Function],
            "items": Array [],
            "menuStyle": Object {
              "background": "rgba(255, 255, 255, 0.9)",
              "borderRadius": "3px",
              "boxShadow": "0 2px 12px rgba(0, 0, 0, 0.1)",
              "fontSize": "90%",
              "maxHeight": "50%",
              "overflow": "auto",
              "padding": "2px 0",
              "position": "fixed",
            },
            "onChange": [Function],
            "onMenuVisibilityChange": [Function],
            "onSelect": [Function],
            "readOnly": undefined,
            "renderInput": [Function],
            "renderItem": [Function],
            "renderMenu": [Function],
            "selectOnBlur": false,
            "value": "",
            "wrapperProps": Object {
              "className": "input-wrapper",
            },
            "wrapperStyle": Object {
              "display": "inline-block",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "button is-loading is-invisible",
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
