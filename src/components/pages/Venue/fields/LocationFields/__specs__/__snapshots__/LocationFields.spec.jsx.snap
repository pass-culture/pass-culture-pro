// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Venue | fields | LocationFields should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LocationFields
    fieldReadOnlyBecauseFrozenFormSiret={true}
    form={Object {}}
    formIsLocationFrozen={true}
    formLatitude={1}
    formLongitude={1}
    readOnly={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2
          className="main-list-title"
        >
          Adresse
        </h2>,
        <div
          className="field-group"
        >
          <HiddenField
            name="isLocationFrozen"
            validator={[Function]}
          />
          <AddressField
            className=""
            disabled={false}
            form={Object {}}
            format={null}
            id={null}
            innerClassName={null}
            label="Numéro et voie : "
            latitude={1}
            longitude={1}
            name="address"
            placeholder=""
            readOnly={true}
            required={false}
            validate={null}
            withMap={true}
          />
          <TextField
            autoComplete="postal-code"
            className=""
            disabled={false}
            format={null}
            id={null}
            innerClassName="col-33"
            isDecimal={true}
            label="Code postal : "
            name="postalCode"
            parse={null}
            placeholder=""
            readOnly={true}
            renderInner={[Function]}
            renderValue={[Function]}
            required={true}
            type="text"
            validate={null}
          />
          <TextField
            autoComplete="address-level2"
            className=""
            disabled={false}
            format={null}
            id={null}
            innerClassName="col-66"
            isDecimal={true}
            label="Ville : "
            name="city"
            parse={null}
            placeholder=""
            readOnly={true}
            renderInner={[Function]}
            renderValue={[Function]}
            required={true}
            type="text"
            validate={null}
          />
          <NumberField
            innerClassName="col-33"
            label="Latitude : "
            name="latitude"
            readOnly={true}
            required={true}
          />
          <NumberField
            innerClassName="col-33"
            label="Longitude : "
            name="longitude"
            readOnly={true}
            required={true}
          />
        </div>,
      ],
      "className": "section",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Adresse",
          "className": "main-list-title",
        },
        "ref": null,
        "rendered": "Adresse",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <HiddenField
              name="isLocationFrozen"
              validator={[Function]}
            />,
            <AddressField
              className=""
              disabled={false}
              form={Object {}}
              format={null}
              id={null}
              innerClassName={null}
              label="Numéro et voie : "
              latitude={1}
              longitude={1}
              name="address"
              placeholder=""
              readOnly={true}
              required={false}
              validate={null}
              withMap={true}
            />,
            <TextField
              autoComplete="postal-code"
              className=""
              disabled={false}
              format={null}
              id={null}
              innerClassName="col-33"
              isDecimal={true}
              label="Code postal : "
              name="postalCode"
              parse={null}
              placeholder=""
              readOnly={true}
              renderInner={[Function]}
              renderValue={[Function]}
              required={true}
              type="text"
              validate={null}
            />,
            <TextField
              autoComplete="address-level2"
              className=""
              disabled={false}
              format={null}
              id={null}
              innerClassName="col-66"
              isDecimal={true}
              label="Ville : "
              name="city"
              parse={null}
              placeholder=""
              readOnly={true}
              renderInner={[Function]}
              renderValue={[Function]}
              required={true}
              type="text"
              validate={null}
            />,
            <NumberField
              innerClassName="col-33"
              label="Latitude : "
              name="latitude"
              readOnly={true}
              required={true}
            />,
            <NumberField
              innerClassName="col-33"
              label="Longitude : "
              name="longitude"
              readOnly={true}
              required={true}
            />,
          ],
          "className": "field-group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "name": "isLocationFrozen",
              "validator": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "",
              "disabled": false,
              "form": Object {},
              "format": null,
              "id": null,
              "innerClassName": null,
              "label": "Numéro et voie : ",
              "latitude": 1,
              "longitude": 1,
              "name": "address",
              "placeholder": "",
              "readOnly": true,
              "required": false,
              "validate": null,
              "withMap": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autoComplete": "postal-code",
              "className": "",
              "disabled": false,
              "format": null,
              "id": null,
              "innerClassName": "col-33",
              "isDecimal": true,
              "label": "Code postal : ",
              "name": "postalCode",
              "parse": null,
              "placeholder": "",
              "readOnly": true,
              "renderInner": [Function],
              "renderValue": [Function],
              "required": true,
              "type": "text",
              "validate": null,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autoComplete": "address-level2",
              "className": "",
              "disabled": false,
              "format": null,
              "id": null,
              "innerClassName": "col-66",
              "isDecimal": true,
              "label": "Ville : ",
              "name": "city",
              "parse": null,
              "placeholder": "",
              "readOnly": true,
              "renderInner": [Function],
              "renderValue": [Function],
              "required": true,
              "type": "text",
              "validate": null,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "innerClassName": "col-33",
              "label": "Latitude : ",
              "name": "latitude",
              "readOnly": true,
              "required": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "innerClassName": "col-33",
              "label": "Longitude : ",
              "name": "longitude",
              "readOnly": true,
              "required": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2
            className="main-list-title"
          >
            Adresse
          </h2>,
          <div
            className="field-group"
          >
            <HiddenField
              name="isLocationFrozen"
              validator={[Function]}
            />
            <AddressField
              className=""
              disabled={false}
              form={Object {}}
              format={null}
              id={null}
              innerClassName={null}
              label="Numéro et voie : "
              latitude={1}
              longitude={1}
              name="address"
              placeholder=""
              readOnly={true}
              required={false}
              validate={null}
              withMap={true}
            />
            <TextField
              autoComplete="postal-code"
              className=""
              disabled={false}
              format={null}
              id={null}
              innerClassName="col-33"
              isDecimal={true}
              label="Code postal : "
              name="postalCode"
              parse={null}
              placeholder=""
              readOnly={true}
              renderInner={[Function]}
              renderValue={[Function]}
              required={true}
              type="text"
              validate={null}
            />
            <TextField
              autoComplete="address-level2"
              className=""
              disabled={false}
              format={null}
              id={null}
              innerClassName="col-66"
              isDecimal={true}
              label="Ville : "
              name="city"
              parse={null}
              placeholder=""
              readOnly={true}
              renderInner={[Function]}
              renderValue={[Function]}
              required={true}
              type="text"
              validate={null}
            />
            <NumberField
              innerClassName="col-33"
              label="Latitude : "
              name="latitude"
              readOnly={true}
              required={true}
            />
            <NumberField
              innerClassName="col-33"
              label="Longitude : "
              name="longitude"
              readOnly={true}
              required={true}
            />
          </div>,
        ],
        "className": "section",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Adresse",
            "className": "main-list-title",
          },
          "ref": null,
          "rendered": "Adresse",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <HiddenField
                name="isLocationFrozen"
                validator={[Function]}
              />,
              <AddressField
                className=""
                disabled={false}
                form={Object {}}
                format={null}
                id={null}
                innerClassName={null}
                label="Numéro et voie : "
                latitude={1}
                longitude={1}
                name="address"
                placeholder=""
                readOnly={true}
                required={false}
                validate={null}
                withMap={true}
              />,
              <TextField
                autoComplete="postal-code"
                className=""
                disabled={false}
                format={null}
                id={null}
                innerClassName="col-33"
                isDecimal={true}
                label="Code postal : "
                name="postalCode"
                parse={null}
                placeholder=""
                readOnly={true}
                renderInner={[Function]}
                renderValue={[Function]}
                required={true}
                type="text"
                validate={null}
              />,
              <TextField
                autoComplete="address-level2"
                className=""
                disabled={false}
                format={null}
                id={null}
                innerClassName="col-66"
                isDecimal={true}
                label="Ville : "
                name="city"
                parse={null}
                placeholder=""
                readOnly={true}
                renderInner={[Function]}
                renderValue={[Function]}
                required={true}
                type="text"
                validate={null}
              />,
              <NumberField
                innerClassName="col-33"
                label="Latitude : "
                name="latitude"
                readOnly={true}
                required={true}
              />,
              <NumberField
                innerClassName="col-33"
                label="Longitude : "
                name="longitude"
                readOnly={true}
                required={true}
              />,
            ],
            "className": "field-group",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "name": "isLocationFrozen",
                "validator": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "",
                "disabled": false,
                "form": Object {},
                "format": null,
                "id": null,
                "innerClassName": null,
                "label": "Numéro et voie : ",
                "latitude": 1,
                "longitude": 1,
                "name": "address",
                "placeholder": "",
                "readOnly": true,
                "required": false,
                "validate": null,
                "withMap": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoComplete": "postal-code",
                "className": "",
                "disabled": false,
                "format": null,
                "id": null,
                "innerClassName": "col-33",
                "isDecimal": true,
                "label": "Code postal : ",
                "name": "postalCode",
                "parse": null,
                "placeholder": "",
                "readOnly": true,
                "renderInner": [Function],
                "renderValue": [Function],
                "required": true,
                "type": "text",
                "validate": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoComplete": "address-level2",
                "className": "",
                "disabled": false,
                "format": null,
                "id": null,
                "innerClassName": "col-66",
                "isDecimal": true,
                "label": "Ville : ",
                "name": "city",
                "parse": null,
                "placeholder": "",
                "readOnly": true,
                "renderInner": [Function],
                "renderValue": [Function],
                "required": true,
                "type": "text",
                "validate": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "innerClassName": "col-33",
                "label": "Latitude : ",
                "name": "latitude",
                "readOnly": true,
                "required": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "innerClassName": "col-33",
                "label": "Longitude : ",
                "name": "longitude",
                "readOnly": true,
                "required": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
