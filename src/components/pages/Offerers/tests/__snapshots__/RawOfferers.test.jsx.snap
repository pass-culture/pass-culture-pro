// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | RawOfferers snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RawOfferers
    dispatch={[Function]}
    location={
        Object {
            "search": "",
          }
    }
    offerers={
        Array [
            Object {},
          ]
    }
    pagination={
        Object {
            "apiQuery": Object {
              "keywords": null,
            },
          }
    }
    pendingOfferers={Array []}
    query={
        Object {
            "change": [Function],
            "parse": [Function],
          }
    }
    user={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HeroSection
          title="Votre structure juridique"
>
          <p
                    className="subtitle"
          >
                    Pour présenter vos offres, vous devez d'abord créer un
                     
                    <b>
                               nouveau lieu 
                    </b>
                     lié à une structure.
                    <br />
                    Sans lieu, vous ne pouvez ajouter que des offres numériques.
          </p>
          <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="cta button is-primary is-outlined"
                    to="/structures/nouveau"
          >
                    + Rattacher une structure supplémentaire
          </NavLink>
</HeroSection>,
        <ReactFinalForm
          initialValues={
                    Object {
                              "keywords": null,
                            }
          }
          onSubmit={[Function]}
          render={[Function]}
/>,
        <br />,
        false,
        <withRouter(_withQueryRouter)
          className="main-list offerers-list"
          element="ul"
          hasMore={false}
          isLoading={true}
          loader={
                    <Spinner
                              Tag="div"
                              className={null}
                              dotFrequency={500}
                              label="Chargement"
                              style={null}
                    />
          }
          useWindow={true}
>
          <Connect(OffererItem)
                    offerer={Object {}}
          />
</withRouter(_withQueryRouter)>,
      ],
      "name": "offerers",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <p
              className="subtitle"
>
              Pour présenter vos offres, vous devez d'abord créer un
               
              <b>
                             nouveau lieu 
              </b>
               lié à une structure.
              <br />
              Sans lieu, vous ne pouvez ajouter que des offres numériques.
</p>,
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="cta button is-primary is-outlined"
              to="/structures/nouveau"
>
              + Rattacher une structure supplémentaire
</NavLink>,
          ],
          "title": "Votre structure juridique",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Pour présenter vos offres, vous devez d'abord créer un",
                " ",
                <b>
                   nouveau lieu 
</b>,
                " lié à une structure.",
                <br />,
                "Sans lieu, vous ne pouvez ajouter que des offres numériques.",
              ],
              "className": "subtitle",
            },
            "ref": null,
            "rendered": Array [
              "Pour présenter vos offres, vous devez d'abord créer un",
              " ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " nouveau lieu ",
                },
                "ref": null,
                "rendered": " nouveau lieu ",
                "type": "b",
              },
              " lié à une structure.",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              "Sans lieu, vous ne pouvez ajouter que des offres numériques.",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": "+ Rattacher une structure supplémentaire",
              "className": "cta button is-primary is-outlined",
              "to": "/structures/nouveau",
            },
            "ref": null,
            "rendered": "+ Rattacher une structure supplémentaire",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "initialValues": Object {
            "keywords": null,
          },
          "onSubmit": [Function],
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Connect(OffererItem)
              offerer={Object {}}
/>,
          ],
          "className": "main-list offerers-list",
          "element": "ul",
          "hasMore": false,
          "isLoading": true,
          "loader": <Spinner
            Tag="div"
            className={null}
            dotFrequency={500}
            label="Chargement"
            style={null}
/>,
          "useWindow": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "offerer": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HeroSection
            title="Votre structure juridique"
>
            <p
                        className="subtitle"
            >
                        Pour présenter vos offres, vous devez d'abord créer un
                         
                        <b>
                                     nouveau lieu 
                        </b>
                         lié à une structure.
                        <br />
                        Sans lieu, vous ne pouvez ajouter que des offres numériques.
            </p>
            <NavLink
                        activeClassName="active"
                        aria-current="page"
                        className="cta button is-primary is-outlined"
                        to="/structures/nouveau"
            >
                        + Rattacher une structure supplémentaire
            </NavLink>
</HeroSection>,
          <ReactFinalForm
            initialValues={
                        Object {
                                    "keywords": null,
                                  }
            }
            onSubmit={[Function]}
            render={[Function]}
/>,
          <br />,
          false,
          <withRouter(_withQueryRouter)
            className="main-list offerers-list"
            element="ul"
            hasMore={false}
            isLoading={true}
            loader={
                        <Spinner
                                    Tag="div"
                                    className={null}
                                    dotFrequency={500}
                                    label="Chargement"
                                    style={null}
                        />
            }
            useWindow={true}
>
            <Connect(OffererItem)
                        offerer={Object {}}
            />
</withRouter(_withQueryRouter)>,
        ],
        "name": "offerers",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <p
                className="subtitle"
>
                Pour présenter vos offres, vous devez d'abord créer un
                 
                <b>
                                 nouveau lieu 
                </b>
                 lié à une structure.
                <br />
                Sans lieu, vous ne pouvez ajouter que des offres numériques.
</p>,
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="cta button is-primary is-outlined"
                to="/structures/nouveau"
>
                + Rattacher une structure supplémentaire
</NavLink>,
            ],
            "title": "Votre structure juridique",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Pour présenter vos offres, vous devez d'abord créer un",
                  " ",
                  <b>
                     nouveau lieu 
</b>,
                  " lié à une structure.",
                  <br />,
                  "Sans lieu, vous ne pouvez ajouter que des offres numériques.",
                ],
                "className": "subtitle",
              },
              "ref": null,
              "rendered": Array [
                "Pour présenter vos offres, vous devez d'abord créer un",
                " ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " nouveau lieu ",
                  },
                  "ref": null,
                  "rendered": " nouveau lieu ",
                  "type": "b",
                },
                " lié à une structure.",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                "Sans lieu, vous ne pouvez ajouter que des offres numériques.",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": "+ Rattacher une structure supplémentaire",
                "className": "cta button is-primary is-outlined",
                "to": "/structures/nouveau",
              },
              "ref": null,
              "rendered": "+ Rattacher une structure supplémentaire",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "initialValues": Object {
              "keywords": null,
            },
            "onSubmit": [Function],
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Connect(OffererItem)
                offerer={Object {}}
/>,
            ],
            "className": "main-list offerers-list",
            "element": "ul",
            "hasMore": false,
            "isLoading": true,
            "loader": <Spinner
              Tag="div"
              className={null}
              dotFrequency={500}
              label="Chargement"
              style={null}
/>,
            "useWindow": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "offerer": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
