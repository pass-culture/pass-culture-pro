// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offerers | Offerers should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Offerers
    assignData={[MockFunction]}
    closeNotification={[MockFunction]}
    currentUser={Object {}}
    loadOfferers={
      [MockFunction] {
        "calls": Array [
          Array [
            [Function],
            [Function],
            Object {
              "keywords": "keywords",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    location={
      Object {
        "search": "",
      }
    }
    offerers={
      Array [
        Object {
          "id": "AE",
          "siren": "1234567",
        },
      ]
    }
    pagination={
      Object {
        "apiQuery": Object {
          "keywords": null,
        },
      }
    }
    query={
      Object {
        "change": [MockFunction],
        "parse": [Function],
      }
    }
    resetLoadedOfferers={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    showNotification={
      [MockFunction] {
        "calls": Array [
          Array [
            "/structures/AE/lieux/creation",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <HeroSection
          subtitle={null}
          title="Votre structure juridique"
        >
          <p
            className="subtitle"
          >
            Pour présenter vos offres, vous devez d’abord 
            <a
              href="/structures/AE/lieux/creation"
            >
              créer un nouveau lieu 
            </a>
             lié à une structure.
            <br />
            Sans lieu, vous pouvez uniquement 
            <a
              href="/offres/creation"
            >
              ajouter des offres numériques.
            </a>
          </p>
          <div
            className="title-action-links"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="cta button is-primary is-outlined"
              to="/structures/creation"
            >
              + Ajouter une structure
              <span
                className="tip-icon"
                data-place="bottom"
                data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                data-type="info"
              >
                <Icon
                  svg="picto-tip"
                />
              </span>
            </NavLink>
          </div>
        </HeroSection>,
        <ReactFinalForm
          initialValues={
            Object {
              "keywords": null,
            }
          }
          onSubmit={[Function]}
          render={[Function]}
        />,
        <br />,
        <withRouter(_withQueryRouter)
          className="main-list offerers-list"
          element="ul"
          hasMore={false}
          isLoading={true}
          loader={
            <Spinner
              Tag="div"
              className={null}
              dotFrequency={500}
              label="Chargement"
              style={null}
            />
          }
        >
          <PendingOffererItem
            offerer={
              Object {
                "id": "AE",
                "siren": "1234567",
              }
            }
          />
        </withRouter(_withQueryRouter)>,
      ],
      "id": "offerers",
      "name": "offerers",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <p
              className="subtitle"
            >
              Pour présenter vos offres, vous devez d’abord 
              <a
                href="/structures/AE/lieux/creation"
              >
                créer un nouveau lieu 
              </a>
               lié à une structure.
              <br />
              Sans lieu, vous pouvez uniquement 
              <a
                href="/offres/creation"
              >
                ajouter des offres numériques.
              </a>
            </p>,
            <div
              className="title-action-links"
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="cta button is-primary is-outlined"
                to="/structures/creation"
              >
                + Ajouter une structure
                <span
                  className="tip-icon"
                  data-place="bottom"
                  data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                  data-type="info"
                >
                  <Icon
                    svg="picto-tip"
                  />
                </span>
              </NavLink>
            </div>,
          ],
          "subtitle": null,
          "title": "Votre structure juridique",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Pour présenter vos offres, vous devez d’abord ",
                <a
                  href="/structures/AE/lieux/creation"
                >
                  créer un nouveau lieu 
                </a>,
                " lié à une structure.",
                <br />,
                "Sans lieu, vous pouvez uniquement ",
                <a
                  href="/offres/creation"
                >
                  ajouter des offres numériques.
                </a>,
              ],
              "className": "subtitle",
            },
            "ref": null,
            "rendered": Array [
              "Pour présenter vos offres, vous devez d’abord ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "créer un nouveau lieu ",
                  "href": "/structures/AE/lieux/creation",
                },
                "ref": null,
                "rendered": "créer un nouveau lieu ",
                "type": "a",
              },
              " lié à une structure.",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              "Sans lieu, vous pouvez uniquement ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "ajouter des offres numériques.",
                  "href": "/offres/creation",
                },
                "ref": null,
                "rendered": "ajouter des offres numériques.",
                "type": "a",
              },
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <NavLink
                activeClassName="active"
                aria-current="page"
                className="cta button is-primary is-outlined"
                to="/structures/creation"
              >
                + Ajouter une structure
                <span
                  className="tip-icon"
                  data-place="bottom"
                  data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                  data-type="info"
                >
                  <Icon
                    svg="picto-tip"
                  />
                </span>
              </NavLink>,
              "className": "title-action-links",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": Array [
                  "+ Ajouter une structure",
                  <span
                    className="tip-icon"
                    data-place="bottom"
                    data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                    data-type="info"
                  >
                    <Icon
                      svg="picto-tip"
                    />
                  </span>,
                ],
                "className": "cta button is-primary is-outlined",
                "to": "/structures/creation",
              },
              "ref": null,
              "rendered": Array [
                "+ Ajouter une structure",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Icon
                      svg="picto-tip"
                    />,
                    "className": "tip-icon",
                    "data-place": "bottom",
                    "data-tip": "<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>",
                    "data-type": "info",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "svg": "picto-tip",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "span",
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "initialValues": Object {
            "keywords": null,
          },
          "onSubmit": [Function],
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <PendingOffererItem
              offerer={
                Object {
                  "id": "AE",
                  "siren": "1234567",
                }
              }
            />,
          ],
          "className": "main-list offerers-list",
          "element": "ul",
          "hasMore": false,
          "isLoading": true,
          "loader": <Spinner
            Tag="div"
            className={null}
            dotFrequency={500}
            label="Chargement"
            style={null}
          />,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1234567",
            "nodeType": "function",
            "props": Object {
              "offerer": Object {
                "id": "AE",
                "siren": "1234567",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <HeroSection
            subtitle={null}
            title="Votre structure juridique"
          >
            <p
              className="subtitle"
            >
              Pour présenter vos offres, vous devez d’abord 
              <a
                href="/structures/AE/lieux/creation"
              >
                créer un nouveau lieu 
              </a>
               lié à une structure.
              <br />
              Sans lieu, vous pouvez uniquement 
              <a
                href="/offres/creation"
              >
                ajouter des offres numériques.
              </a>
            </p>
            <div
              className="title-action-links"
            >
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="cta button is-primary is-outlined"
                to="/structures/creation"
              >
                + Ajouter une structure
                <span
                  className="tip-icon"
                  data-place="bottom"
                  data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                  data-type="info"
                >
                  <Icon
                    svg="picto-tip"
                  />
                </span>
              </NavLink>
            </div>
          </HeroSection>,
          <ReactFinalForm
            initialValues={
              Object {
                "keywords": null,
              }
            }
            onSubmit={[Function]}
            render={[Function]}
          />,
          <br />,
          <withRouter(_withQueryRouter)
            className="main-list offerers-list"
            element="ul"
            hasMore={false}
            isLoading={true}
            loader={
              <Spinner
                Tag="div"
                className={null}
                dotFrequency={500}
                label="Chargement"
                style={null}
              />
            }
          >
            <PendingOffererItem
              offerer={
                Object {
                  "id": "AE",
                  "siren": "1234567",
                }
              }
            />
          </withRouter(_withQueryRouter)>,
        ],
        "id": "offerers",
        "name": "offerers",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <p
                className="subtitle"
              >
                Pour présenter vos offres, vous devez d’abord 
                <a
                  href="/structures/AE/lieux/creation"
                >
                  créer un nouveau lieu 
                </a>
                 lié à une structure.
                <br />
                Sans lieu, vous pouvez uniquement 
                <a
                  href="/offres/creation"
                >
                  ajouter des offres numériques.
                </a>
              </p>,
              <div
                className="title-action-links"
              >
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="cta button is-primary is-outlined"
                  to="/structures/creation"
                >
                  + Ajouter une structure
                  <span
                    className="tip-icon"
                    data-place="bottom"
                    data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                    data-type="info"
                  >
                    <Icon
                      svg="picto-tip"
                    />
                  </span>
                </NavLink>
              </div>,
            ],
            "subtitle": null,
            "title": "Votre structure juridique",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Pour présenter vos offres, vous devez d’abord ",
                  <a
                    href="/structures/AE/lieux/creation"
                  >
                    créer un nouveau lieu 
                  </a>,
                  " lié à une structure.",
                  <br />,
                  "Sans lieu, vous pouvez uniquement ",
                  <a
                    href="/offres/creation"
                  >
                    ajouter des offres numériques.
                  </a>,
                ],
                "className": "subtitle",
              },
              "ref": null,
              "rendered": Array [
                "Pour présenter vos offres, vous devez d’abord ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "créer un nouveau lieu ",
                    "href": "/structures/AE/lieux/creation",
                  },
                  "ref": null,
                  "rendered": "créer un nouveau lieu ",
                  "type": "a",
                },
                " lié à une structure.",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                "Sans lieu, vous pouvez uniquement ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "ajouter des offres numériques.",
                    "href": "/offres/creation",
                  },
                  "ref": null,
                  "rendered": "ajouter des offres numériques.",
                  "type": "a",
                },
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="cta button is-primary is-outlined"
                  to="/structures/creation"
                >
                  + Ajouter une structure
                  <span
                    className="tip-icon"
                    data-place="bottom"
                    data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                    data-type="info"
                  >
                    <Icon
                      svg="picto-tip"
                    />
                  </span>
                </NavLink>,
                "className": "title-action-links",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "aria-current": "page",
                  "children": Array [
                    "+ Ajouter une structure",
                    <span
                      className="tip-icon"
                      data-place="bottom"
                      data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                      data-type="info"
                    >
                      <Icon
                        svg="picto-tip"
                      />
                    </span>,
                  ],
                  "className": "cta button is-primary is-outlined",
                  "to": "/structures/creation",
                },
                "ref": null,
                "rendered": Array [
                  "+ Ajouter une structure",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Icon
                        svg="picto-tip"
                      />,
                      "className": "tip-icon",
                      "data-place": "bottom",
                      "data-tip": "<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>",
                      "data-type": "info",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "svg": "picto-tip",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "span",
                  },
                ],
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "initialValues": Object {
              "keywords": null,
            },
            "onSubmit": [Function],
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <PendingOffererItem
                offerer={
                  Object {
                    "id": "AE",
                    "siren": "1234567",
                  }
                }
              />,
            ],
            "className": "main-list offerers-list",
            "element": "ul",
            "hasMore": false,
            "isLoading": true,
            "loader": <Spinner
              Tag="div"
              className={null}
              dotFrequency={500}
              label="Chargement"
              style={null}
            />,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1234567",
              "nodeType": "function",
              "props": Object {
                "offerer": Object {
                  "id": "AE",
                  "siren": "1234567",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
