// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offerers | Offerers should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Offerers
    closeNotification={[MockFunction]}
    currentUser={Object {}}
    isOffererCreationAvailable={true}
    loadOfferers={
      [MockFunction] {
        "calls": Array [
          Array [
            [Function],
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    location={
      Object {
        "search": "",
      }
    }
    offerers={
      Array [
        Object {
          "id": "AE",
          "siren": "1234567",
        },
      ]
    }
    query={
      Object {
        "parse": [Function],
      }
    }
    resetLoadedOfferers={[MockFunction]}
    showNotification={
      [MockFunction] {
        "calls": Array [
          Array [
            "/structures/AE/lieux/creation",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Titles
          action={
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="link is-primary is-outlined"
              to="/structures/creation"
            >
              + Ajouter une structure
              <span
                data-place="bottom"
                data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                data-type="info"
              >
                <Icon
                  png={null}
                  svg="picto-tip"
                />
              </span>
            </NavLink>
          }
          subtitle={null}
          title="Votre structure juridique"
        />,
        <p
          className="advice"
        >
          Pour présenter vos offres, vous devez d’abord 
          <a
            href="/structures/AE/lieux/creation"
          >
            créer un nouveau lieu 
          </a>
           lié à une structure.
          <br />
          Sans lieu, vous pouvez uniquement 
          <a
            href="/offres/creation"
          >
            ajouter des offres numériques.
          </a>
        </p>,
        <ReactFinalForm
          initialValues={
            Object {
              "keywords": null,
            }
          }
          onSubmit={[Function]}
          render={[Function]}
        />,
        <br />,
        <LoadingInfiniteScroll
          className="main-list offerers-list"
          element="ul"
          getScrollParent={null}
          handlePageChange={[Function]}
          handlePageReset={[Function]}
          hasMore={true}
          initialLoad={true}
          isLoading={true}
          isReverse={false}
          loader={
            <Spinner
              Tag="div"
              className={null}
              dotFrequency={500}
              label="Chargement"
              style={null}
            />
          }
          pageStart={0}
          ref={null}
          threshold={250}
          useCapture={false}
          useWindow={true}
        >
          <PendingOffererItem
            offerer={
              Object {
                "id": "AE",
                "siren": "1234567",
              }
            }
          />
        </LoadingInfiniteScroll>,
        false,
      ],
      "id": "offerers",
      "name": "offerers",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "action": <NavLink
            activeClassName="active"
            aria-current="page"
            className="link is-primary is-outlined"
            to="/structures/creation"
          >
            + Ajouter une structure
            <span
              data-place="bottom"
              data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
              data-type="info"
            >
              <Icon
                png={null}
                svg="picto-tip"
              />
            </span>
          </NavLink>,
          "subtitle": null,
          "title": "Votre structure juridique",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Pour présenter vos offres, vous devez d’abord ",
            <a
              href="/structures/AE/lieux/creation"
            >
              créer un nouveau lieu 
            </a>,
            " lié à une structure.",
            <br />,
            "Sans lieu, vous pouvez uniquement ",
            <a
              href="/offres/creation"
            >
              ajouter des offres numériques.
            </a>,
          ],
          "className": "advice",
        },
        "ref": null,
        "rendered": Array [
          "Pour présenter vos offres, vous devez d’abord ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "créer un nouveau lieu ",
              "href": "/structures/AE/lieux/creation",
            },
            "ref": null,
            "rendered": "créer un nouveau lieu ",
            "type": "a",
          },
          " lié à une structure.",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          "Sans lieu, vous pouvez uniquement ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "ajouter des offres numériques.",
              "href": "/offres/creation",
            },
            "ref": null,
            "rendered": "ajouter des offres numériques.",
            "type": "a",
          },
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "initialValues": Object {
            "keywords": null,
          },
          "onSubmit": [Function],
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <PendingOffererItem
              offerer={
                Object {
                  "id": "AE",
                  "siren": "1234567",
                }
              }
            />,
          ],
          "className": "main-list offerers-list",
          "element": "ul",
          "getScrollParent": null,
          "handlePageChange": [Function],
          "handlePageReset": [Function],
          "hasMore": true,
          "initialLoad": true,
          "isLoading": true,
          "isReverse": false,
          "loader": <Spinner
            Tag="div"
            className={null}
            dotFrequency={500}
            label="Chargement"
            style={null}
          />,
          "pageStart": 0,
          "ref": null,
          "threshold": 250,
          "useCapture": false,
          "useWindow": true,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1234567",
            "nodeType": "function",
            "props": Object {
              "offerer": Object {
                "id": "AE",
                "siren": "1234567",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Titles
            action={
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="link is-primary is-outlined"
                to="/structures/creation"
              >
                + Ajouter une structure
                <span
                  data-place="bottom"
                  data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                  data-type="info"
                >
                  <Icon
                    png={null}
                    svg="picto-tip"
                  />
                </span>
              </NavLink>
            }
            subtitle={null}
            title="Votre structure juridique"
          />,
          <p
            className="advice"
          >
            Pour présenter vos offres, vous devez d’abord 
            <a
              href="/structures/AE/lieux/creation"
            >
              créer un nouveau lieu 
            </a>
             lié à une structure.
            <br />
            Sans lieu, vous pouvez uniquement 
            <a
              href="/offres/creation"
            >
              ajouter des offres numériques.
            </a>
          </p>,
          <ReactFinalForm
            initialValues={
              Object {
                "keywords": null,
              }
            }
            onSubmit={[Function]}
            render={[Function]}
          />,
          <br />,
          <LoadingInfiniteScroll
            className="main-list offerers-list"
            element="ul"
            getScrollParent={null}
            handlePageChange={[Function]}
            handlePageReset={[Function]}
            hasMore={true}
            initialLoad={true}
            isLoading={true}
            isReverse={false}
            loader={
              <Spinner
                Tag="div"
                className={null}
                dotFrequency={500}
                label="Chargement"
                style={null}
              />
            }
            pageStart={0}
            ref={null}
            threshold={250}
            useCapture={false}
            useWindow={true}
          >
            <PendingOffererItem
              offerer={
                Object {
                  "id": "AE",
                  "siren": "1234567",
                }
              }
            />
          </LoadingInfiniteScroll>,
          false,
        ],
        "id": "offerers",
        "name": "offerers",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "action": <NavLink
              activeClassName="active"
              aria-current="page"
              className="link is-primary is-outlined"
              to="/structures/creation"
            >
              + Ajouter une structure
              <span
                data-place="bottom"
                data-tip="<p>Ajouter les SIREN des structures que vous souhaitez gérer au global avec ce compte (par exemple, un réseau de grande distribution ou de franchisés).</p>"
                data-type="info"
              >
                <Icon
                  png={null}
                  svg="picto-tip"
                />
              </span>
            </NavLink>,
            "subtitle": null,
            "title": "Votre structure juridique",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Pour présenter vos offres, vous devez d’abord ",
              <a
                href="/structures/AE/lieux/creation"
              >
                créer un nouveau lieu 
              </a>,
              " lié à une structure.",
              <br />,
              "Sans lieu, vous pouvez uniquement ",
              <a
                href="/offres/creation"
              >
                ajouter des offres numériques.
              </a>,
            ],
            "className": "advice",
          },
          "ref": null,
          "rendered": Array [
            "Pour présenter vos offres, vous devez d’abord ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "créer un nouveau lieu ",
                "href": "/structures/AE/lieux/creation",
              },
              "ref": null,
              "rendered": "créer un nouveau lieu ",
              "type": "a",
            },
            " lié à une structure.",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            "Sans lieu, vous pouvez uniquement ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "ajouter des offres numériques.",
                "href": "/offres/creation",
              },
              "ref": null,
              "rendered": "ajouter des offres numériques.",
              "type": "a",
            },
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "initialValues": Object {
              "keywords": null,
            },
            "onSubmit": [Function],
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <PendingOffererItem
                offerer={
                  Object {
                    "id": "AE",
                    "siren": "1234567",
                  }
                }
              />,
            ],
            "className": "main-list offerers-list",
            "element": "ul",
            "getScrollParent": null,
            "handlePageChange": [Function],
            "handlePageReset": [Function],
            "hasMore": true,
            "initialLoad": true,
            "isLoading": true,
            "isReverse": false,
            "loader": <Spinner
              Tag="div"
              className={null}
              dotFrequency={500}
              label="Chargement"
              style={null}
            />,
            "pageStart": 0,
            "ref": null,
            "threshold": 250,
            "useCapture": false,
            "useWindow": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1234567",
              "nodeType": "function",
              "props": Object {
                "offerer": Object {
                  "id": "AE",
                  "siren": "1234567",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
