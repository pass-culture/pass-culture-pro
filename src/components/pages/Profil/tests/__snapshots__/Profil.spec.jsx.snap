// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Profil should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Profil
    currentUser={
      Object {
        "email": "fake email",
        "publicName": "fake publicName",
      }
    }
    dispatch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "backTo": Object {
        "label": "Accueil",
        "path": "/accueil",
      },
      "children": Array [
        <HeroSection
          subtitle={null}
          title="Profil"
        />,
        <ReactFinalForm
          initialValues={
            Object {
              "email": "fake email",
              "publicName": "fake publicName",
            }
          }
          onSubmit={[Function]}
          render={[Function]}
        />,
        <hr />,
      ],
      "name": "profile",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": null,
          "subtitle": null,
          "title": "Profil",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "initialValues": Object {
            "email": "fake email",
            "publicName": "fake publicName",
          },
          "onSubmit": [Function],
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "backTo": Object {
          "label": "Accueil",
          "path": "/accueil",
        },
        "children": Array [
          <HeroSection
            subtitle={null}
            title="Profil"
          />,
          <ReactFinalForm
            initialValues={
              Object {
                "email": "fake email",
                "publicName": "fake publicName",
              }
            }
            onSubmit={[Function]}
            render={[Function]}
          />,
          <hr />,
        ],
        "name": "profile",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": null,
            "subtitle": null,
            "title": "Profil",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "initialValues": Object {
              "email": "fake email",
              "publicName": "fake publicName",
            },
            "onSubmit": [Function],
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
