// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Mediation should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Mediation
    createOrUpdateMediation={[MockFunction]}
    getMediation={[MockFunction]}
    getOffer={[MockFunction]}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    match={
      Object {
        "params": Object {
          "offerId": "AGKA",
        },
      }
    }
    mediation={Object {}}
    offer={Object {}}
    offerer={Object {}}
    showFailDataNotification={[MockFunction]}
    showSuccessDataNotification={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "backTo": Object {
        "label": "Revenir à l’offre",
        "path": "/offres/AGKA",
      },
      "children": Array [
        <HeroSection
          subtitle={null}
          title="Modifiez une accroche"
        >
          <p
            className="subtitle"
          >
            Ajoutez un visuel marquant pour mettre en avant cette offre.
          </p>
          <p>
            <b>
              L’accroche permet d’afficher votre offre "à la une" de l’app, 
            </b>
            et la rend visuellement plus attrayante. C’est une image (et bientôt une phrase ou une vidéo) intrigante, percutante, séduisante...
            <br />
            en un mot : accrocheuse.
          </p>
          <p>
            Les accroches font la spécificité du pass Culture. Prenez le temps de les choisir avec soin ! 
          </p>
          <p>
            Utilisateurs avancés : vous pouvez 
            <a
              href="https://pass.culture.fr/assets/docs/PassCulture-accroche-template-20181114.zip"
            >
              télécharger ici les gabarits Illustrator et Photoshop.
            </a>
          </p>
        </HeroSection>,
        <div
          className="section"
        >
          <label
            className="label"
          >
            Depuis une adresse Internet :
          </label>
          <div
            className="field is-grouped"
          >
            <p
              className="control is-expanded"
            >
              <input
                className="input is-rounded"
                onChange={[Function]}
                placeholder="URL du fichier"
                type="url"
                value=""
              />
            </p>
            <p
              className="control"
            >
              <button
                className="button is-primary is-outlined is-medium"
                onClick={[Function]}
                type="button"
              >
                OK
              </button>
            </p>
          </div>
        </div>,
        <div
          className="section"
        >
          <label
            className="label"
          >
            ...ou depuis votre poste : 
          </label>
          <label
            className="button is-primary is-outlined"
          >
            Choisir un fichier 
            <input
              hidden={true}
              onChange={[Function]}
              type="file"
            />
          </label>
        </div>,
        undefined,
      ],
      "handleDataRequest": [Function],
      "name": "mediation",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <p
              className="subtitle"
            >
              Ajoutez un visuel marquant pour mettre en avant cette offre.
            </p>,
            <p>
              <b>
                L’accroche permet d’afficher votre offre "à la une" de l’app, 
              </b>
              et la rend visuellement plus attrayante. C’est une image (et bientôt une phrase ou une vidéo) intrigante, percutante, séduisante...
              <br />
              en un mot : accrocheuse.
            </p>,
            <p>
              Les accroches font la spécificité du pass Culture. Prenez le temps de les choisir avec soin ! 
            </p>,
            <p>
              Utilisateurs avancés : vous pouvez 
              <a
                href="https://pass.culture.fr/assets/docs/PassCulture-accroche-template-20181114.zip"
              >
                télécharger ici les gabarits Illustrator et Photoshop.
              </a>
            </p>,
          ],
          "subtitle": null,
          "title": "Modifiez une accroche",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Ajoutez un visuel marquant pour mettre en avant cette offre.",
              "className": "subtitle",
            },
            "ref": null,
            "rendered": "Ajoutez un visuel marquant pour mettre en avant cette offre.",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <b>
                  L’accroche permet d’afficher votre offre "à la une" de l’app, 
                </b>,
                "et la rend visuellement plus attrayante. C’est une image (et bientôt une phrase ou une vidéo) intrigante, percutante, séduisante...",
                <br />,
                "en un mot : accrocheuse.",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "L’accroche permet d’afficher votre offre \\"à la une\\" de l’app, ",
                },
                "ref": null,
                "rendered": "L’accroche permet d’afficher votre offre \\"à la une\\" de l’app, ",
                "type": "b",
              },
              "et la rend visuellement plus attrayante. C’est une image (et bientôt une phrase ou une vidéo) intrigante, percutante, séduisante...",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              "en un mot : accrocheuse.",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Les accroches font la spécificité du pass Culture. Prenez le temps de les choisir avec soin ! ",
            },
            "ref": null,
            "rendered": "Les accroches font la spécificité du pass Culture. Prenez le temps de les choisir avec soin ! ",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Utilisateurs avancés : vous pouvez ",
                <a
                  href="https://pass.culture.fr/assets/docs/PassCulture-accroche-template-20181114.zip"
                >
                  télécharger ici les gabarits Illustrator et Photoshop.
                </a>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Utilisateurs avancés : vous pouvez ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "télécharger ici les gabarits Illustrator et Photoshop.",
                  "href": "https://pass.culture.fr/assets/docs/PassCulture-accroche-template-20181114.zip",
                },
                "ref": null,
                "rendered": "télécharger ici les gabarits Illustrator et Photoshop.",
                "type": "a",
              },
            ],
            "type": "p",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              className="label"
            >
              Depuis une adresse Internet :
            </label>,
            <div
              className="field is-grouped"
            >
              <p
                className="control is-expanded"
              >
                <input
                  className="input is-rounded"
                  onChange={[Function]}
                  placeholder="URL du fichier"
                  type="url"
                  value=""
                />
              </p>
              <p
                className="control"
              >
                <button
                  className="button is-primary is-outlined is-medium"
                  onClick={[Function]}
                  type="button"
                >
                  OK
                </button>
              </p>
            </div>,
          ],
          "className": "section",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Depuis une adresse Internet :",
              "className": "label",
            },
            "ref": null,
            "rendered": "Depuis une adresse Internet :",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="control is-expanded"
                >
                  <input
                    className="input is-rounded"
                    onChange={[Function]}
                    placeholder="URL du fichier"
                    type="url"
                    value=""
                  />
                </p>,
                <p
                  className="control"
                >
                  <button
                    className="button is-primary is-outlined is-medium"
                    onClick={[Function]}
                    type="button"
                  >
                    OK
                  </button>
                </p>,
              ],
              "className": "field is-grouped",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="input is-rounded"
                    onChange={[Function]}
                    placeholder="URL du fichier"
                    type="url"
                    value=""
                  />,
                  "className": "control is-expanded",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input is-rounded",
                    "onChange": [Function],
                    "placeholder": "URL du fichier",
                    "type": "url",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="button is-primary is-outlined is-medium"
                    onClick={[Function]}
                    type="button"
                  >
                    OK
                  </button>,
                  "className": "control",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "OK",
                    "className": "button is-primary is-outlined is-medium",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "OK",
                  "type": "button",
                },
                "type": "p",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              className="label"
            >
              ...ou depuis votre poste : 
            </label>,
            <label
              className="button is-primary is-outlined"
            >
              Choisir un fichier 
              <input
                hidden={true}
                onChange={[Function]}
                type="file"
              />
            </label>,
          ],
          "className": "section",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "...ou depuis votre poste : ",
              "className": "label",
            },
            "ref": null,
            "rendered": "...ou depuis votre poste : ",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Choisir un fichier ",
                <input
                  hidden={true}
                  onChange={[Function]}
                  type="file"
                />,
              ],
              "className": "button is-primary is-outlined",
            },
            "ref": null,
            "rendered": Array [
              "Choisir un fichier ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "hidden": true,
                  "onChange": [Function],
                  "type": "file",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "label",
          },
        ],
        "type": "div",
      },
      undefined,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "backTo": Object {
          "label": "Revenir à l’offre",
          "path": "/offres/AGKA",
        },
        "children": Array [
          <HeroSection
            subtitle={null}
            title="Modifiez une accroche"
          >
            <p
              className="subtitle"
            >
              Ajoutez un visuel marquant pour mettre en avant cette offre.
            </p>
            <p>
              <b>
                L’accroche permet d’afficher votre offre "à la une" de l’app, 
              </b>
              et la rend visuellement plus attrayante. C’est une image (et bientôt une phrase ou une vidéo) intrigante, percutante, séduisante...
              <br />
              en un mot : accrocheuse.
            </p>
            <p>
              Les accroches font la spécificité du pass Culture. Prenez le temps de les choisir avec soin ! 
            </p>
            <p>
              Utilisateurs avancés : vous pouvez 
              <a
                href="https://pass.culture.fr/assets/docs/PassCulture-accroche-template-20181114.zip"
              >
                télécharger ici les gabarits Illustrator et Photoshop.
              </a>
            </p>
          </HeroSection>,
          <div
            className="section"
          >
            <label
              className="label"
            >
              Depuis une adresse Internet :
            </label>
            <div
              className="field is-grouped"
            >
              <p
                className="control is-expanded"
              >
                <input
                  className="input is-rounded"
                  onChange={[Function]}
                  placeholder="URL du fichier"
                  type="url"
                  value=""
                />
              </p>
              <p
                className="control"
              >
                <button
                  className="button is-primary is-outlined is-medium"
                  onClick={[Function]}
                  type="button"
                >
                  OK
                </button>
              </p>
            </div>
          </div>,
          <div
            className="section"
          >
            <label
              className="label"
            >
              ...ou depuis votre poste : 
            </label>
            <label
              className="button is-primary is-outlined"
            >
              Choisir un fichier 
              <input
                hidden={true}
                onChange={[Function]}
                type="file"
              />
            </label>
          </div>,
          undefined,
        ],
        "handleDataRequest": [Function],
        "name": "mediation",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <p
                className="subtitle"
              >
                Ajoutez un visuel marquant pour mettre en avant cette offre.
              </p>,
              <p>
                <b>
                  L’accroche permet d’afficher votre offre "à la une" de l’app, 
                </b>
                et la rend visuellement plus attrayante. C’est une image (et bientôt une phrase ou une vidéo) intrigante, percutante, séduisante...
                <br />
                en un mot : accrocheuse.
              </p>,
              <p>
                Les accroches font la spécificité du pass Culture. Prenez le temps de les choisir avec soin ! 
              </p>,
              <p>
                Utilisateurs avancés : vous pouvez 
                <a
                  href="https://pass.culture.fr/assets/docs/PassCulture-accroche-template-20181114.zip"
                >
                  télécharger ici les gabarits Illustrator et Photoshop.
                </a>
              </p>,
            ],
            "subtitle": null,
            "title": "Modifiez une accroche",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Ajoutez un visuel marquant pour mettre en avant cette offre.",
                "className": "subtitle",
              },
              "ref": null,
              "rendered": "Ajoutez un visuel marquant pour mettre en avant cette offre.",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <b>
                    L’accroche permet d’afficher votre offre "à la une" de l’app, 
                  </b>,
                  "et la rend visuellement plus attrayante. C’est une image (et bientôt une phrase ou une vidéo) intrigante, percutante, séduisante...",
                  <br />,
                  "en un mot : accrocheuse.",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "L’accroche permet d’afficher votre offre \\"à la une\\" de l’app, ",
                  },
                  "ref": null,
                  "rendered": "L’accroche permet d’afficher votre offre \\"à la une\\" de l’app, ",
                  "type": "b",
                },
                "et la rend visuellement plus attrayante. C’est une image (et bientôt une phrase ou une vidéo) intrigante, percutante, séduisante...",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                "en un mot : accrocheuse.",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Les accroches font la spécificité du pass Culture. Prenez le temps de les choisir avec soin ! ",
              },
              "ref": null,
              "rendered": "Les accroches font la spécificité du pass Culture. Prenez le temps de les choisir avec soin ! ",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Utilisateurs avancés : vous pouvez ",
                  <a
                    href="https://pass.culture.fr/assets/docs/PassCulture-accroche-template-20181114.zip"
                  >
                    télécharger ici les gabarits Illustrator et Photoshop.
                  </a>,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Utilisateurs avancés : vous pouvez ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "télécharger ici les gabarits Illustrator et Photoshop.",
                    "href": "https://pass.culture.fr/assets/docs/PassCulture-accroche-template-20181114.zip",
                  },
                  "ref": null,
                  "rendered": "télécharger ici les gabarits Illustrator et Photoshop.",
                  "type": "a",
                },
              ],
              "type": "p",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="label"
              >
                Depuis une adresse Internet :
              </label>,
              <div
                className="field is-grouped"
              >
                <p
                  className="control is-expanded"
                >
                  <input
                    className="input is-rounded"
                    onChange={[Function]}
                    placeholder="URL du fichier"
                    type="url"
                    value=""
                  />
                </p>
                <p
                  className="control"
                >
                  <button
                    className="button is-primary is-outlined is-medium"
                    onClick={[Function]}
                    type="button"
                  >
                    OK
                  </button>
                </p>
              </div>,
            ],
            "className": "section",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Depuis une adresse Internet :",
                "className": "label",
              },
              "ref": null,
              "rendered": "Depuis une adresse Internet :",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="control is-expanded"
                  >
                    <input
                      className="input is-rounded"
                      onChange={[Function]}
                      placeholder="URL du fichier"
                      type="url"
                      value=""
                    />
                  </p>,
                  <p
                    className="control"
                  >
                    <button
                      className="button is-primary is-outlined is-medium"
                      onClick={[Function]}
                      type="button"
                    >
                      OK
                    </button>
                  </p>,
                ],
                "className": "field is-grouped",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <input
                      className="input is-rounded"
                      onChange={[Function]}
                      placeholder="URL du fichier"
                      type="url"
                      value=""
                    />,
                    "className": "control is-expanded",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "input is-rounded",
                      "onChange": [Function],
                      "placeholder": "URL du fichier",
                      "type": "url",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-primary is-outlined is-medium"
                      onClick={[Function]}
                      type="button"
                    >
                      OK
                    </button>,
                    "className": "control",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "OK",
                      "className": "button is-primary is-outlined is-medium",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": "OK",
                    "type": "button",
                  },
                  "type": "p",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label
                className="label"
              >
                ...ou depuis votre poste : 
              </label>,
              <label
                className="button is-primary is-outlined"
              >
                Choisir un fichier 
                <input
                  hidden={true}
                  onChange={[Function]}
                  type="file"
                />
              </label>,
            ],
            "className": "section",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "...ou depuis votre poste : ",
                "className": "label",
              },
              "ref": null,
              "rendered": "...ou depuis votre poste : ",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Choisir un fichier ",
                  <input
                    hidden={true}
                    onChange={[Function]}
                    type="file"
                  />,
                ],
                "className": "button is-primary is-outlined",
              },
              "ref": null,
              "rendered": Array [
                "Choisir un fichier ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "hidden": true,
                    "onChange": [Function],
                    "type": "file",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "label",
            },
          ],
          "type": "div",
        },
        undefined,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
