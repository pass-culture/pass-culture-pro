// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | Offers | OfferItem snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OfferItem
    aggregatedStock={Object {}}
    availabilityMessage="Encore 7 stocks restant"
    dispatch={[MockFunction]}
    location={
      Object {
        "search": "?orderBy=offer.id+desc",
      }
    }
    maxDate={
      Object {
        "format": [MockFunction] {
          "calls": Array [
            Array [
              "DD/MM/YYYY",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
      }
    }
    mediations={
      Array [
        Object {
          "id": "HA",
          "isActive": true,
          "thumbUrl": "https://url.to/thumb",
        },
      ]
    }
    offer={
      Object {
        "activeMediation": Object {
          "id": "HA",
          "isActive": true,
          "thumbUrl": "https://url.to/thumb",
        },
        "id": "M4",
        "isActive": true,
        "isEditable": true,
        "isEvent": true,
        "isThing": false,
      }
    }
    offerTypeLabel="fake label"
    offerer={Object {}}
    product={Object {}}
    stocks={Array []}
    trackActivateOffer={[MockFunction]}
    trackDeactivateOffer={[MockFunction]}
    updateOffer={[MockFunction]}
    venue={
      Object {
        "name": "Paris",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Thumb
          alt="offre"
          src="https://url.to/thumb"
        />,
        <div
          className="list-content"
        >
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="name"
            to="/offres/M4?orderBy=offer.id+desc"
          >
            <Dotdotdot
              clamp={1}
              tagName="div"
              truncationChar="…"
              useNativeClamp={false}
            />
          </NavLink>
          <ul
            className="infos"
          >
            <li
              className="is-uppercase"
            >
              fake label
            </li>
            <li>
              <span
                className="label"
              >
                Structure : 
              </span>
            </li>
            <li>
              <span
                className="label"
              >
                Lieu : 
              </span>
              Paris
            </li>
          </ul>
          <ul
            className="infos"
          >
            <li>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="has-text-primary"
                to="/offres/M4?gestion"
              >
                0 date
              </NavLink>
            </li>
            <li>
              jusqu’au undefined
            </li>
            <li>
              Encore 7 stocks restant
            </li>
            <li>
              <Price
                Tag="span"
                className={null}
                free="Gratuit"
                value={0}
              />
            </li>
          </ul>
          <ul
            className="actions offer-actions-list"
          >
            <li>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="button is-small is-tertiary add-mediations-link"
                to="/offres/M4"
              >
                <span
                  className="icon"
                >
                  <Icon
                    svg="ico-stars"
                  />
                </span>
                <span>
                  Accroches
                </span>
              </NavLink>
            </li>
            <li>
              <OfferPreviewLink
                className="button is-tertiary is-small offer-preview-link"
                href="http://localhost/offre/details/M4/HA"
                onClick={[Function]}
              />
            </li>
            <li>
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="button is-tertiary is-small edit-link"
                to="/offres/M4"
              >
                <Icon
                  svg="ico-pen-r"
                />
                Modifier
              </NavLink>
            </li>
            <li>
              <button
                className="button is-tertiary is-small activ-switch"
                onClick={[Function]}
                type="button"
              >
                <span>
                  <Icon
                    svg="ico-close-r"
                  />
                  Désactiver
                </span>
              </button>
            </li>
          </ul>
        </div>,
      ],
      "className": "offer-item active product",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "alt": "offre",
          "src": "https://url.to/thumb",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="name"
              to="/offres/M4?orderBy=offer.id+desc"
            >
              <Dotdotdot
                clamp={1}
                tagName="div"
                truncationChar="…"
                useNativeClamp={false}
              />
            </NavLink>,
            <ul
              className="infos"
            >
              <li
                className="is-uppercase"
              >
                fake label
              </li>
              <li>
                <span
                  className="label"
                >
                  Structure : 
                </span>
              </li>
              <li>
                <span
                  className="label"
                >
                  Lieu : 
                </span>
                Paris
              </li>
            </ul>,
            <ul
              className="infos"
            >
              <li>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="has-text-primary"
                  to="/offres/M4?gestion"
                >
                  0 date
                </NavLink>
              </li>
              <li>
                jusqu’au undefined
              </li>
              <li>
                Encore 7 stocks restant
              </li>
              <li>
                <Price
                  Tag="span"
                  className={null}
                  free="Gratuit"
                  value={0}
                />
              </li>
            </ul>,
            <ul
              className="actions offer-actions-list"
            >
              <li>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="button is-small is-tertiary add-mediations-link"
                  to="/offres/M4"
                >
                  <span
                    className="icon"
                  >
                    <Icon
                      svg="ico-stars"
                    />
                  </span>
                  <span>
                    Accroches
                  </span>
                </NavLink>
              </li>
              <li>
                <OfferPreviewLink
                  className="button is-tertiary is-small offer-preview-link"
                  href="http://localhost/offre/details/M4/HA"
                  onClick={[Function]}
                />
              </li>
              <li>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="button is-tertiary is-small edit-link"
                  to="/offres/M4"
                >
                  <Icon
                    svg="ico-pen-r"
                  />
                  Modifier
                </NavLink>
              </li>
              <li>
                <button
                  className="button is-tertiary is-small activ-switch"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    <Icon
                      svg="ico-close-r"
                    />
                    Désactiver
                  </span>
                </button>
              </li>
            </ul>,
          ],
          "className": "list-content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": <Dotdotdot
                clamp={1}
                tagName="div"
                truncationChar="…"
                useNativeClamp={false}
              />,
              "className": "name",
              "title": undefined,
              "to": "/offres/M4?orderBy=offer.id+desc",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "clamp": 1,
                "tagName": "div",
                "truncationChar": "…",
                "useNativeClamp": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <li
                  className="is-uppercase"
                >
                  fake label
                </li>,
                <li>
                  <span
                    className="label"
                  >
                    Structure : 
                  </span>
                </li>,
                <li>
                  <span
                    className="label"
                  >
                    Lieu : 
                  </span>
                  Paris
                </li>,
              ],
              "className": "infos",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "fake label",
                  "className": "is-uppercase",
                },
                "ref": null,
                "rendered": "fake label",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="label"
                    >
                      Structure : 
                    </span>,
                    undefined,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Structure : ",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "Structure : ",
                    "type": "span",
                  },
                  undefined,
                ],
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="label"
                    >
                      Lieu : 
                    </span>,
                    "Paris",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Lieu : ",
                      "className": "label",
                    },
                    "ref": null,
                    "rendered": "Lieu : ",
                    "type": "span",
                  },
                  "Paris",
                ],
                "type": "li",
              },
            ],
            "type": "ul",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                undefined,
                <li>
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="has-text-primary"
                    to="/offres/M4?gestion"
                  >
                    0 date
                  </NavLink>
                </li>,
                <li>
                  jusqu’au undefined
                </li>,
                <li>
                  Encore 7 stocks restant
                </li>,
                <li>
                  <Price
                    Tag="span"
                    className={null}
                    free="Gratuit"
                    value={0}
                  />
                </li>,
              ],
              "className": "infos",
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="has-text-primary"
                    to="/offres/M4?gestion"
                  >
                    0 date
                  </NavLink>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "aria-current": "page",
                    "children": "0 date",
                    "className": "has-text-primary",
                    "to": "/offres/M4?gestion",
                  },
                  "ref": null,
                  "rendered": "0 date",
                  "type": [Function],
                },
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "jusqu’au undefined",
                },
                "ref": null,
                "rendered": "jusqu’au undefined",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Encore 7 stocks restant",
                },
                "ref": null,
                "rendered": "Encore 7 stocks restant",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Price
                    Tag="span"
                    className={null}
                    free="Gratuit"
                    value={0}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "Tag": "span",
                    "className": null,
                    "free": "Gratuit",
                    "value": 0,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "li",
              },
            ],
            "type": "ul",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <li>
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="button is-small is-tertiary add-mediations-link"
                    to="/offres/M4"
                  >
                    <span
                      className="icon"
                    >
                      <Icon
                        svg="ico-stars"
                      />
                    </span>
                    <span>
                      Accroches
                    </span>
                  </NavLink>
                </li>,
                <li>
                  <OfferPreviewLink
                    className="button is-tertiary is-small offer-preview-link"
                    href="http://localhost/offre/details/M4/HA"
                    onClick={[Function]}
                  />
                </li>,
                <li>
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="button is-tertiary is-small edit-link"
                    to="/offres/M4"
                  >
                    <Icon
                      svg="ico-pen-r"
                    />
                    Modifier
                  </NavLink>
                </li>,
                <li>
                  <button
                    className="button is-tertiary is-small activ-switch"
                    onClick={[Function]}
                    type="button"
                  >
                    <span>
                      <Icon
                        svg="ico-close-r"
                      />
                      Désactiver
                    </span>
                  </button>
                </li>,
              ],
              "className": "actions offer-actions-list",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="button is-small is-tertiary add-mediations-link"
                    to="/offres/M4"
                  >
                    <span
                      className="icon"
                    >
                      <Icon
                        svg="ico-stars"
                      />
                    </span>
                    <span>
                      Accroches
                    </span>
                  </NavLink>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "aria-current": "page",
                    "children": Array [
                      <span
                        className="icon"
                      >
                        <Icon
                          svg="ico-stars"
                        />
                      </span>,
                      <span>
                        Accroches
                      </span>,
                    ],
                    "className": "button is-small is-tertiary add-mediations-link",
                    "to": "/offres/M4",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Icon
                          svg="ico-stars"
                        />,
                        "className": "icon",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "svg": "ico-stars",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Accroches",
                      },
                      "ref": null,
                      "rendered": "Accroches",
                      "type": "span",
                    },
                  ],
                  "type": [Function],
                },
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <OfferPreviewLink
                    className="button is-tertiary is-small offer-preview-link"
                    href="http://localhost/offre/details/M4/HA"
                    onClick={[Function]}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "button is-tertiary is-small offer-preview-link",
                    "href": "http://localhost/offre/details/M4/HA",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="button is-tertiary is-small edit-link"
                    to="/offres/M4"
                  >
                    <Icon
                      svg="ico-pen-r"
                    />
                    Modifier
                  </NavLink>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "aria-current": "page",
                    "children": Array [
                      <Icon
                        svg="ico-pen-r"
                      />,
                      "Modifier",
                    ],
                    "className": "button is-tertiary is-small edit-link",
                    "to": "/offres/M4",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "svg": "ico-pen-r",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "Modifier",
                  ],
                  "type": [Function],
                },
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <button
                    className="button is-tertiary is-small activ-switch"
                    onClick={[Function]}
                    type="button"
                  >
                    <span>
                      <Icon
                        svg="ico-close-r"
                      />
                      Désactiver
                    </span>
                  </button>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span>
                      <Icon
                        svg="ico-close-r"
                      />
                      Désactiver
                    </span>,
                    "className": "button is-tertiary is-small activ-switch",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Icon
                          svg="ico-close-r"
                        />,
                        "Désactiver",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "svg": "ico-close-r",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "Désactiver",
                    ],
                    "type": "span",
                  },
                  "type": "button",
                },
                "type": "li",
              },
            ],
            "type": "ul",
          },
        ],
        "type": "div",
      },
    ],
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Thumb
            alt="offre"
            src="https://url.to/thumb"
          />,
          <div
            className="list-content"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="name"
              to="/offres/M4?orderBy=offer.id+desc"
            >
              <Dotdotdot
                clamp={1}
                tagName="div"
                truncationChar="…"
                useNativeClamp={false}
              />
            </NavLink>
            <ul
              className="infos"
            >
              <li
                className="is-uppercase"
              >
                fake label
              </li>
              <li>
                <span
                  className="label"
                >
                  Structure : 
                </span>
              </li>
              <li>
                <span
                  className="label"
                >
                  Lieu : 
                </span>
                Paris
              </li>
            </ul>
            <ul
              className="infos"
            >
              <li>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="has-text-primary"
                  to="/offres/M4?gestion"
                >
                  0 date
                </NavLink>
              </li>
              <li>
                jusqu’au undefined
              </li>
              <li>
                Encore 7 stocks restant
              </li>
              <li>
                <Price
                  Tag="span"
                  className={null}
                  free="Gratuit"
                  value={0}
                />
              </li>
            </ul>
            <ul
              className="actions offer-actions-list"
            >
              <li>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="button is-small is-tertiary add-mediations-link"
                  to="/offres/M4"
                >
                  <span
                    className="icon"
                  >
                    <Icon
                      svg="ico-stars"
                    />
                  </span>
                  <span>
                    Accroches
                  </span>
                </NavLink>
              </li>
              <li>
                <OfferPreviewLink
                  className="button is-tertiary is-small offer-preview-link"
                  href="http://localhost/offre/details/M4/HA"
                  onClick={[Function]}
                />
              </li>
              <li>
                <NavLink
                  activeClassName="active"
                  aria-current="page"
                  className="button is-tertiary is-small edit-link"
                  to="/offres/M4"
                >
                  <Icon
                    svg="ico-pen-r"
                  />
                  Modifier
                </NavLink>
              </li>
              <li>
                <button
                  className="button is-tertiary is-small activ-switch"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    <Icon
                      svg="ico-close-r"
                    />
                    Désactiver
                  </span>
                </button>
              </li>
            </ul>
          </div>,
        ],
        "className": "offer-item active product",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alt": "offre",
            "src": "https://url.to/thumb",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="name"
                to="/offres/M4?orderBy=offer.id+desc"
              >
                <Dotdotdot
                  clamp={1}
                  tagName="div"
                  truncationChar="…"
                  useNativeClamp={false}
                />
              </NavLink>,
              <ul
                className="infos"
              >
                <li
                  className="is-uppercase"
                >
                  fake label
                </li>
                <li>
                  <span
                    className="label"
                  >
                    Structure : 
                  </span>
                </li>
                <li>
                  <span
                    className="label"
                  >
                    Lieu : 
                  </span>
                  Paris
                </li>
              </ul>,
              <ul
                className="infos"
              >
                <li>
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="has-text-primary"
                    to="/offres/M4?gestion"
                  >
                    0 date
                  </NavLink>
                </li>
                <li>
                  jusqu’au undefined
                </li>
                <li>
                  Encore 7 stocks restant
                </li>
                <li>
                  <Price
                    Tag="span"
                    className={null}
                    free="Gratuit"
                    value={0}
                  />
                </li>
              </ul>,
              <ul
                className="actions offer-actions-list"
              >
                <li>
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="button is-small is-tertiary add-mediations-link"
                    to="/offres/M4"
                  >
                    <span
                      className="icon"
                    >
                      <Icon
                        svg="ico-stars"
                      />
                    </span>
                    <span>
                      Accroches
                    </span>
                  </NavLink>
                </li>
                <li>
                  <OfferPreviewLink
                    className="button is-tertiary is-small offer-preview-link"
                    href="http://localhost/offre/details/M4/HA"
                    onClick={[Function]}
                  />
                </li>
                <li>
                  <NavLink
                    activeClassName="active"
                    aria-current="page"
                    className="button is-tertiary is-small edit-link"
                    to="/offres/M4"
                  >
                    <Icon
                      svg="ico-pen-r"
                    />
                    Modifier
                  </NavLink>
                </li>
                <li>
                  <button
                    className="button is-tertiary is-small activ-switch"
                    onClick={[Function]}
                    type="button"
                  >
                    <span>
                      <Icon
                        svg="ico-close-r"
                      />
                      Désactiver
                    </span>
                  </button>
                </li>
              </ul>,
            ],
            "className": "list-content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": <Dotdotdot
                  clamp={1}
                  tagName="div"
                  truncationChar="…"
                  useNativeClamp={false}
                />,
                "className": "name",
                "title": undefined,
                "to": "/offres/M4?orderBy=offer.id+desc",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": undefined,
                  "clamp": 1,
                  "tagName": "div",
                  "truncationChar": "…",
                  "useNativeClamp": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <li
                    className="is-uppercase"
                  >
                    fake label
                  </li>,
                  <li>
                    <span
                      className="label"
                    >
                      Structure : 
                    </span>
                  </li>,
                  <li>
                    <span
                      className="label"
                    >
                      Lieu : 
                    </span>
                    Paris
                  </li>,
                ],
                "className": "infos",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "fake label",
                    "className": "is-uppercase",
                  },
                  "ref": null,
                  "rendered": "fake label",
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span
                        className="label"
                      >
                        Structure : 
                      </span>,
                      undefined,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Structure : ",
                        "className": "label",
                      },
                      "ref": null,
                      "rendered": "Structure : ",
                      "type": "span",
                    },
                    undefined,
                  ],
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span
                        className="label"
                      >
                        Lieu : 
                      </span>,
                      "Paris",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Lieu : ",
                        "className": "label",
                      },
                      "ref": null,
                      "rendered": "Lieu : ",
                      "type": "span",
                    },
                    "Paris",
                  ],
                  "type": "li",
                },
              ],
              "type": "ul",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  undefined,
                  <li>
                    <NavLink
                      activeClassName="active"
                      aria-current="page"
                      className="has-text-primary"
                      to="/offres/M4?gestion"
                    >
                      0 date
                    </NavLink>
                  </li>,
                  <li>
                    jusqu’au undefined
                  </li>,
                  <li>
                    Encore 7 stocks restant
                  </li>,
                  <li>
                    <Price
                      Tag="span"
                      className={null}
                      free="Gratuit"
                      value={0}
                    />
                  </li>,
                ],
                "className": "infos",
              },
              "ref": null,
              "rendered": Array [
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      aria-current="page"
                      className="has-text-primary"
                      to="/offres/M4?gestion"
                    >
                      0 date
                    </NavLink>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "aria-current": "page",
                      "children": "0 date",
                      "className": "has-text-primary",
                      "to": "/offres/M4?gestion",
                    },
                    "ref": null,
                    "rendered": "0 date",
                    "type": [Function],
                  },
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "jusqu’au undefined",
                  },
                  "ref": null,
                  "rendered": "jusqu’au undefined",
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Encore 7 stocks restant",
                  },
                  "ref": null,
                  "rendered": "Encore 7 stocks restant",
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Price
                      Tag="span"
                      className={null}
                      free="Gratuit"
                      value={0}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "Tag": "span",
                      "className": null,
                      "free": "Gratuit",
                      "value": 0,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "li",
                },
              ],
              "type": "ul",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <li>
                    <NavLink
                      activeClassName="active"
                      aria-current="page"
                      className="button is-small is-tertiary add-mediations-link"
                      to="/offres/M4"
                    >
                      <span
                        className="icon"
                      >
                        <Icon
                          svg="ico-stars"
                        />
                      </span>
                      <span>
                        Accroches
                      </span>
                    </NavLink>
                  </li>,
                  <li>
                    <OfferPreviewLink
                      className="button is-tertiary is-small offer-preview-link"
                      href="http://localhost/offre/details/M4/HA"
                      onClick={[Function]}
                    />
                  </li>,
                  <li>
                    <NavLink
                      activeClassName="active"
                      aria-current="page"
                      className="button is-tertiary is-small edit-link"
                      to="/offres/M4"
                    >
                      <Icon
                        svg="ico-pen-r"
                      />
                      Modifier
                    </NavLink>
                  </li>,
                  <li>
                    <button
                      className="button is-tertiary is-small activ-switch"
                      onClick={[Function]}
                      type="button"
                    >
                      <span>
                        <Icon
                          svg="ico-close-r"
                        />
                        Désactiver
                      </span>
                    </button>
                  </li>,
                ],
                "className": "actions offer-actions-list",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      aria-current="page"
                      className="button is-small is-tertiary add-mediations-link"
                      to="/offres/M4"
                    >
                      <span
                        className="icon"
                      >
                        <Icon
                          svg="ico-stars"
                        />
                      </span>
                      <span>
                        Accroches
                      </span>
                    </NavLink>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "aria-current": "page",
                      "children": Array [
                        <span
                          className="icon"
                        >
                          <Icon
                            svg="ico-stars"
                          />
                        </span>,
                        <span>
                          Accroches
                        </span>,
                      ],
                      "className": "button is-small is-tertiary add-mediations-link",
                      "to": "/offres/M4",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <Icon
                            svg="ico-stars"
                          />,
                          "className": "icon",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "svg": "ico-stars",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Accroches",
                        },
                        "ref": null,
                        "rendered": "Accroches",
                        "type": "span",
                      },
                    ],
                    "type": [Function],
                  },
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <OfferPreviewLink
                      className="button is-tertiary is-small offer-preview-link"
                      href="http://localhost/offre/details/M4/HA"
                      onClick={[Function]}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "button is-tertiary is-small offer-preview-link",
                      "href": "http://localhost/offre/details/M4/HA",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <NavLink
                      activeClassName="active"
                      aria-current="page"
                      className="button is-tertiary is-small edit-link"
                      to="/offres/M4"
                    >
                      <Icon
                        svg="ico-pen-r"
                      />
                      Modifier
                    </NavLink>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "activeClassName": "active",
                      "aria-current": "page",
                      "children": Array [
                        <Icon
                          svg="ico-pen-r"
                        />,
                        "Modifier",
                      ],
                      "className": "button is-tertiary is-small edit-link",
                      "to": "/offres/M4",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "svg": "ico-pen-r",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "Modifier",
                    ],
                    "type": [Function],
                  },
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <button
                      className="button is-tertiary is-small activ-switch"
                      onClick={[Function]}
                      type="button"
                    >
                      <span>
                        <Icon
                          svg="ico-close-r"
                        />
                        Désactiver
                      </span>
                    </button>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span>
                        <Icon
                          svg="ico-close-r"
                        />
                        Désactiver
                      </span>,
                      "className": "button is-tertiary is-small activ-switch",
                      "onClick": [Function],
                      "type": "button",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <Icon
                            svg="ico-close-r"
                          />,
                          "Désactiver",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "svg": "ico-close-r",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "Désactiver",
                      ],
                      "type": "span",
                    },
                    "type": "button",
                  },
                  "type": "li",
                },
              ],
              "type": "ul",
            },
          ],
          "type": "div",
        },
      ],
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
