// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | layout | Insert should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Insert
    icon="example-icon-name"
  >
    {'Les'}
        &lt;b&gt;
          {' réservations d’événements '}
        &lt;/b&gt;
        {'sont annulables par les utilisateurs jusqu’à 72h avant la date d’événement.'}
        &lt;p /&gt;
        &lt;p /&gt;
        {'La contremarque ne peut être validée qu’après ce délai.'}
  </Insert>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Icon
          png="picto-info-solid-black"
          svg={null}
        />,
        <span>
          {'Les'}
        &lt;b&gt;
          {' réservations d’événements '}
        &lt;/b&gt;
        {'sont annulables par les utilisateurs jusqu’à 72h avant la date d’événement.'}
        &lt;p /&gt;
        &lt;p /&gt;
        {'La contremarque ne peut être validée qu’après ce délai.'}
        </span>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "png": "picto-info-solid-black",
          "svg": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "{'Les'}
        <b>
          {' réservations d’événements '}
        </b>
        {'sont annulables par les utilisateurs jusqu’à 72h avant la date d’événement.'}
        <p />
        <p />
        {'La contremarque ne peut être validée qu’après ce délai.'}",
        },
        "ref": null,
        "rendered": "{'Les'}
        <b>
          {' réservations d’événements '}
        </b>
        {'sont annulables par les utilisateurs jusqu’à 72h avant la date d’événement.'}
        <p />
        <p />
        {'La contremarque ne peut être validée qu’après ce délai.'}",
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Icon
            png="picto-info-solid-black"
            svg={null}
          />,
          <span>
            {'Les'}
        &lt;b&gt;
          {' réservations d’événements '}
        &lt;/b&gt;
        {'sont annulables par les utilisateurs jusqu’à 72h avant la date d’événement.'}
        &lt;p /&gt;
        &lt;p /&gt;
        {'La contremarque ne peut être validée qu’après ce délai.'}
          </span>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "png": "picto-info-solid-black",
            "svg": null,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "{'Les'}
        <b>
          {' réservations d’événements '}
        </b>
        {'sont annulables par les utilisateurs jusqu’à 72h avant la date d’événement.'}
        <p />
        <p />
        {'La contremarque ne peut être validée qu’après ce délai.'}",
          },
          "ref": null,
          "rendered": "{'Les'}
        <b>
          {' réservations d’événements '}
        </b>
        {'sont annulables par les utilisateurs jusqu’à 72h avant la date d’événement.'}
        <p />
        <p />
        {'La contremarque ne peut être validée qu’après ce délai.'}",
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
