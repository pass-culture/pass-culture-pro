// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | layout | Titles should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Titles
    action={null}
    subtitle="Fake subtitle"
    title="Fake title"
  >
     
  </Titles>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="title-subtitle-link-block"
        >
          <h2>
            FAKE SUBTITLE
          </h2>
        </div>,
        <h1>
          Fake title
        </h1>,
      ],
      "className": "section hero-section",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              FAKE SUBTITLE
            </h2>,
            null,
          ],
          "className": "title-subtitle-link-block",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "FAKE SUBTITLE",
            },
            "ref": null,
            "rendered": "FAKE SUBTITLE",
            "type": "h2",
          },
          null,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Fake title",
        },
        "ref": null,
        "rendered": "Fake title",
        "type": "h1",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="title-subtitle-link-block"
          >
            <h2>
              FAKE SUBTITLE
            </h2>
          </div>,
          <h1>
            Fake title
          </h1>,
        ],
        "className": "section hero-section",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2>
                FAKE SUBTITLE
              </h2>,
              null,
            ],
            "className": "title-subtitle-link-block",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "FAKE SUBTITLE",
              },
              "ref": null,
              "rendered": "FAKE SUBTITLE",
              "type": "h2",
            },
            null,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Fake title",
          },
          "ref": null,
          "rendered": "Fake title",
          "type": "h1",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
