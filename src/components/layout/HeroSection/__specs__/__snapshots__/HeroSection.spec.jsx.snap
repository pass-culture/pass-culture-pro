// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | layout | HeroSection snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HeroSection
    subtitle="Fake subtitle"
    title="Fake title"
  >
     
  </HeroSection>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="section-icon-mask"
        >
          <div
            className="section-icon"
          />
        </div>,
        <h1>
          Fake title
        </h1>,
        <h2
          className="has-text-weight-bold is-paddingless"
        >
          Fake subtitle
        </h2>,
        " ",
      ],
      "className": "section hero-section",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="section-icon"
          />,
          "className": "section-icon-mask",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "section-icon",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Fake title",
        },
        "ref": null,
        "rendered": "Fake title",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Fake subtitle",
          "className": "has-text-weight-bold is-paddingless",
        },
        "ref": null,
        "rendered": "Fake subtitle",
        "type": "h2",
      },
      " ",
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="section-icon-mask"
          >
            <div
              className="section-icon"
            />
          </div>,
          <h1>
            Fake title
          </h1>,
          <h2
            className="has-text-weight-bold is-paddingless"
          >
            Fake subtitle
          </h2>,
          " ",
        ],
        "className": "section hero-section",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="section-icon"
            />,
            "className": "section-icon-mask",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "section-icon",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Fake title",
          },
          "ref": null,
          "rendered": "Fake title",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Fake subtitle",
            "className": "has-text-weight-bold is-paddingless",
          },
          "ref": null,
          "rendered": "Fake subtitle",
          "type": "h2",
        },
        " ",
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
